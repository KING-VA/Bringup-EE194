# Set the process technology & node
# TODO ucb-bar/hammer#317 Move me to technology.core
vlsi.core.technology: "intech22"
vlsi.core.node: 22

technology.intech22:
  # This should be the path to the root of the install
  # Must be specified.
  base_dir: "/tools/intech22/"

  # This should be the path to the PDK root
  # Must be specified.
  pdk_install_dir: "/tools/intech22/PDK/pdk224_r0.9.2"

  # This should be the path to the standard cell library root
  # Must be specified.
  std_cell_install_dir: "/tools/intech22/LIB/lib224_b15_7t_108pp_pdk090_r1v0p0_fv"
  
  # This should be the path to the pads library root
  # Must be specified.
  pad_install_dir: "/tools/intech22/LIB/ip224_1.4"

  # This should be the path to the tape-in collateral root
  # Must be specified.
  tape_in_collateral_install_dir: "/tools/intech22/PDK/pdk224_r0.9.2/libraries/tic"

  # Specifies number of IO rings in design. Used for optional intech22_io_fillers hook.
  # type: int
  io_rings: 1

  # Flip chip routing width for optional intech22_fc_route hook, in um
  # Matches m8 width over tv1. Non-default widths must be <= 11.8 or >= 12.2.
  # type: Decimal
  fc_route_width: 12

  # Max distance from edge that power bumps can be selected for fc routing in optional intech22_fc_route hook, in um
  # type: Decimal
  pg_bump_max_dist: 500

  # Edges that will be used above (should match the edges on which you have IO rings)
  # Can be a list containing only "top", "bottom", "left", and/or "right"
  # type: List[str]
  pg_bump_edges: ["top", "bottom", "left", "right"]

  # CTS non-default routing (NDR) rule selection
  # Options are "shield" or "no shield". Any other strings will use default routing tracks.
  ndr: "shield"

technology.core:
  # This key should exist in the stackups list in the tech json
  stackup: "m11_1x_3xa_1xb_1xc_2yb_2ga_mim2_1gb__bumpp"
  # This should specify the TOPMOST metal layer the standard cells use for power rails
  # Note that this is not usually stackup specific; it is based on the std cell libraries themselves
  std_cell_rail_layer: "m1"
  # This is used to provide a reference master for generating standard cells
  tap_cell_rail_reference: "b15ztpn00an1*"

vlsi.technology:
  # Set standard cell LEF placement site
  # TODO ucb-bar/hammer#317 Move me to technology.core
  placement_site: "core"
  # Set the layer that blocks vias under bumps
  bump_block_cut_layer: "gv1"
  # Set the interval and offset for tap cells
  tap_cell_interval: 75.6
  tap_cell_offset: 0.0

# Override default VDD to be 0.765 V to pick up a sane set of libraries.
# TODO: FIXME: must set this to exactly the same string as in the tech plugin.
vlsi.inputs.supplies.VDD: "0.765 V"

# Default MMMC corners
vlsi.inputs.mmmc_corners: [
  {name: "psss_0.765v_125c", type: "setup", voltage: "0.765 V", temp: "125 C"},
  {name: "pfff_0.890v_-40c", type: "hold", voltage: "0.89 V", temp: "-40 C"},
  {name: "tttt_0.850v_25c", type: "extra", voltage: "0.85 V", temp: "25 C"}
]

# Default Power Straps
par.power_straps_mode: generate
par.generate_power_straps_method: by_tracks
par.blockage_spacing: 0.54
par.blockage_spacing_top_layer: "m4"
par.generate_power_straps_options:
  by_tracks:
    strap_layers:
      - m3
      - m4
      - m5
      - m6
      - m7
      - m8
      - gmz
      - gm0
      - gmb
    pin_layers:
      - gmb
    track_width: 1
    track_width_m5: 2
    track_width_m6: 4
    track_offset_m8: 9
    track_width_gmz: 3
    track_width_gm0: 3 
    track_width_gmb: 7
    track_spacing: 0
    track_spacing_m3: 2
    track_spacing_m4: 2
    track_start: 10
    power_utilization: 0.2
    power_utilization_m5: 0.1
    power_utilization_gmz: 0.9 # max
    power_utilization_gm0: 0.9 # max
    power_utilization_gmb: 0.9 # max

# Default pin assignment
vlsi.inputs.pin.assignments: [
  {pins: "*", layers: ["m3", "m5"], side: "bottom"}
]

# Default tools and versions
vlsi.core.sram_generator_tool: "hammer.intech22.sram_compiler"
vlsi.core.sim_tool: "hammer.sim.vcs"
sim.vcs.version: "S-2021.09-SP1-1"
vlsi.core.synthesis_tool: "hammer.synthesis.genus"
synthesis.genus.version: "211"
vlsi.core.par_tool: "hammer.par.innovus"
par.innovus.version: "211"
par.innovus.design_flow_effort: "standard"
par.inputs.gds_merge: true
vlsi.core.power_tool: "hammer.power.voltus"
power.voltus.version: "211"
#vlsi.core.drc_tool: "hammer.drc.calibre"
drc.calibre.version: "2022.2_24.16"
#vlsi.core.lvs_tool: "hammer.drc.calibre"
lvs.calibre.version: "2022.2_24.16"
vlsi.core.drc_tool: "hammer.drc.icv"
drc.icv.version: "S-2021.06-SP3-2"
vlsi.core.lvs_tool: "hammer.lvs.icv"
lvs.icv.version: "S-2021.06-SP3-2"

# Simulation settings
sim.inputs.defines: [
  "INTCNOPWR",         # std-cell no power pins
  "INTC_NO_PWR_PINS", # srams no power pins
  "INTC_EMULATION"    # don't include UPF
]

# Voltus settings
cadence.extra_env_vars_meta: "lazydeepsubst"
cadence.extra_env_vars: 
  - INTEL_PDK: "${technology.intech22.pdk_install_dir}"
  - CMI_CONFIG: "${technology.intech22.pdk_install_dir}/cmi/spectre/cmi/cmiconfig"
power.inputs.extra_corners_only: true
power.voltus:
  macro_pgv: false
  lef_layer_map: "lefdefLayer.map"
  lef_layer_map_meta: "prependlocal"

# Calibre environment variables
# Copied from $PDK/runsets/calibre/svrf/p1222.sh
mentor.extra_env_vars_meta: "lazydeepsubst"
mentor.extra_env_vars:
  - INTEL_CALIBRE_ENV: "1"
  - DR_PROCESS: "dotFour"
  - LAYERSTACK: "${technology.core.stackup}"
  - DR_LAYERSTACK: "${technology.core.stackup}"
  - DR_GATE_DIRECTION: "VERTICAL"
  - DR_DIC_EXISTENCE_CHECK: "NO"
  - DR_LIB_NOFILTER: "NO"
  - DR_DONTCMPGNACS: "YES"
  - DR_MERGEOPEN: "NO"
  - DR_GLOBAL_COLON: "YES"
  - DR_WELL_TEXT: "NO"
  - DR_NWELLTAP: "YES"
  - DR_SUBTAP: "YES"
  - DR_SECTION_LEVEL: "NO"
  - DR_COMBINE_DEN_WINDOWS: "YES"
  - DR_TemplateValidate: "NO"
  - DR_DIC_EXISTANCE_CHECK: "NO"
  - DR_GEN_DEN_RING: "YES"
  - DR_VIRPKGROUTE: "NO"
  - DR_DISPLAY_MASK: "NO"
  - DR_DEBUG: "NO"
  - DR_DISPLAY_PCT_LOOP: "NO"
  - DR_enableXHP: "NO"
  - DR_BoT_Bump: "NO"
  - DR_FILTER_DNW_DIODE: "YES"
  - CALIBRE_SUPPRESS_GROUP_ERROR: "TRUE"
  - CALIBRE_SUPPRESS_SELECT_CHECK_ERROR: "TRUE"
  - DR_RDB_PATH: "./"
  - DR_RDB_FILE: "$DR_RDB_PATH/out.rdb"
  - DR_RVE_FILE: "drc_results.db" #matches view_drc script
  - DR_REPORT_FILE: "drc_results.rpt" #matches view_drc script
  - DR_ERC_REPORT: "erc.sum"
  - DR_ERC_RESULT: "erc.rdb"
  - DR_OUTPUT_FILE: "debug.gds" #for debugging intermediate DRC checks/layers. Recommended to use drc_rules_to_run.
  - Calibre_RUNSET:         "${technology.intech22.pdk_install_dir}/runsets/calibre/svrf"
  - DR_userOverrides:       "${technology.intech22.pdk_install_dir}/runsets/calibre/svrf/includes/useroverrides/useroverrides.svrf"
  - DR_userOverrides_reuse: "${technology.intech22.pdk_install_dir}/runsets/calibre/svrf/includes/useroverrides/useroverrides_reuse.svrf"
  - select_check_file:      "${technology.intech22.pdk_install_dir}/runsets/calibre/svrf/includes/select_check_file"
  - CALIBRE_VERBOSE: "1"
mentor.layerprops: "${technology.intech22.pdk_install_dir}/runsets/calibre/svrf/layerprop/p1222.layerprops"
mentor.layerprops_meta: "lazysubst"

# ICV settings
synopsys.layerprops: "signoff/icvwb_layerprops.mac"
synopsys.layerprops_meta: "prependlocal"
drc.icv.include_dirs:
  - "${technology.intech22.pdk_install_dir}/runsets/icvtdr/PXL"
  - "${technology.intech22.pdk_install_dir}/libraries/icv/libcells"
  - "${technology.intech22.pdk_install_dir}/runsets/icvtdr/PXL/StandAlone"
drc.icv.include_dirs_meta: "lazysubst"
lvs.icv.include_dirs: 
  - "${technology.intech22.pdk_install_dir}/runsets/icvtdr/PXL"
  - "${technology.intech22.pdk_install_dir}/libraries/icv/libcells"
  - "${technology.intech22.pdk_install_dir}/runsets/icvtdr/PXL/StandAlone"
lvs.icv.include_dirs_meta: "lazysubst"
drc.icv.defines:  
  - _drLAYERSTACK: "${technology.core.stackup}"
  - DR_LAYERSTACK: "${technology.core.stackup}"
drc.icv.defines_meta: "lazydeepsubst"
lvs.icv.defines:  
  - _drLAYERSTACK: "${technology.core.stackup}"
  - DR_LAYERSTACK: "${technology.core.stackup}"
lvs.icv.defines_meta: "lazydeepsubst"
