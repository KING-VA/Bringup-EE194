// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module CSRFile(
  input         clock,
                reset,
                io_ungated_clock,
                io_interrupts_debug,
                io_interrupts_mtip,
                io_interrupts_msip,
                io_interrupts_meip,
                io_interrupts_seip,
  input  [1:0]  io_hartid,
  input  [11:0] io_rw_addr,
  input  [2:0]  io_rw_cmd,
  input  [63:0] io_rw_wdata,
  input  [31:0] io_decode_0_inst,
  input         io_exception,
                io_retire,
  input  [63:0] io_cause,
  input  [39:0] io_pc,
                io_tval,
  input         io_gva,
                io_fcsr_flags_valid,
  input  [4:0]  io_fcsr_flags_bits,
  input  [31:0] io_inst_0,
  output [63:0] io_rw_rdata,
  output        io_decode_0_fp_illegal,
                io_decode_0_fp_csr,
                io_decode_0_rocc_illegal,
                io_decode_0_read_illegal,
                io_decode_0_write_illegal,
                io_decode_0_write_flush,
                io_decode_0_system_illegal,
                io_csr_stall,
                io_eret,
                io_singleStep,
                io_status_debug,
                io_status_cease,
                io_status_wfi,
  output [31:0] io_status_isa,
  output [1:0]  io_status_dprv,
                io_status_prv,
  output        io_status_gva,
                io_status_tsr,
                io_status_tw,
                io_status_tvm,
                io_status_mxr,
                io_status_sum,
                io_status_mprv,
  output [1:0]  io_status_fs,
                io_status_mpp,
  output        io_status_spp,
                io_status_mpie,
                io_status_spie,
                io_status_mie,
                io_status_sie,
  output [3:0]  io_ptbr_mode,
  output [43:0] io_ptbr_ppn,
  output [39:0] io_evec,
  output [63:0] io_time,
  output [2:0]  io_fcsr_rm,
  output        io_interrupt,
  output [63:0] io_interrupt_cause,
  output        io_bp_0_control_action,
                io_bp_0_control_chain,
  output [1:0]  io_bp_0_control_tmatch,
  output        io_bp_0_control_m,
                io_bp_0_control_s,
                io_bp_0_control_u,
                io_bp_0_control_x,
                io_bp_0_control_w,
                io_bp_0_control_r,
  output [38:0] io_bp_0_address,
  output        io_inhibit_cycle,
                io_trace_0_valid,
  output [39:0] io_trace_0_iaddr,
  output [31:0] io_trace_0_insn,
  output        io_trace_0_exception,
  output [63:0] io_customCSRs_0_value
);

  wire [63:0] _io_rw_rdata_WIRE;	// @[Mux.scala:27:73]
  reg         io_status_cease_r;	// @[Reg.scala:35:20]
  wire        _io_singleStep_output;	// @[CSR.scala:937:34]
  reg  [1:0]  reg_mstatus_prv;	// @[CSR.scala:371:28]
  reg         reg_mstatus_gva;	// @[CSR.scala:371:28]
  reg         reg_mstatus_tsr;	// @[CSR.scala:371:28]
  reg         reg_mstatus_tw;	// @[CSR.scala:371:28]
  reg         reg_mstatus_tvm;	// @[CSR.scala:371:28]
  reg         reg_mstatus_mxr;	// @[CSR.scala:371:28]
  reg         reg_mstatus_sum;	// @[CSR.scala:371:28]
  reg         reg_mstatus_mprv;	// @[CSR.scala:371:28]
  reg  [1:0]  reg_mstatus_fs;	// @[CSR.scala:371:28]
  reg  [1:0]  reg_mstatus_mpp;	// @[CSR.scala:371:28]
  reg         reg_mstatus_spp;	// @[CSR.scala:371:28]
  reg         reg_mstatus_mpie;	// @[CSR.scala:371:28]
  reg         reg_mstatus_spie;	// @[CSR.scala:371:28]
  reg         reg_mstatus_mie;	// @[CSR.scala:371:28]
  reg         reg_mstatus_sie;	// @[CSR.scala:371:28]
  reg         reg_dcsr_ebreakm;	// @[CSR.scala:379:25]
  reg         reg_dcsr_ebreaks;	// @[CSR.scala:379:25]
  reg         reg_dcsr_ebreaku;	// @[CSR.scala:379:25]
  reg  [2:0]  reg_dcsr_cause;	// @[CSR.scala:379:25]
  reg         reg_dcsr_step;	// @[CSR.scala:379:25]
  reg  [1:0]  reg_dcsr_prv;	// @[CSR.scala:379:25]
  reg         reg_debug;	// @[CSR.scala:451:26]
  reg  [39:0] reg_dpc;	// @[CSR.scala:452:20]
  reg  [63:0] reg_dscratch0;	// @[CSR.scala:453:26]
  reg         reg_singleStepped;	// @[CSR.scala:455:30]
  reg         reg_bp_0_control_dmode;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_action;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_chain;	// @[CSR.scala:461:19]
  reg  [1:0]  reg_bp_0_control_tmatch;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_m;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_s;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_u;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_x;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_w;	// @[CSR.scala:461:19]
  reg         reg_bp_0_control_r;	// @[CSR.scala:461:19]
  reg  [38:0] reg_bp_0_address;	// @[CSR.scala:461:19]
  reg  [63:0] reg_mie;	// @[CSR.scala:464:20]
  reg  [63:0] reg_mideleg;	// @[CSR.scala:466:18]
  wire [63:0] read_mideleg = reg_mideleg & 64'h2222;	// @[CSR.scala:466:18, :467:38]
  reg  [63:0] reg_medeleg;	// @[CSR.scala:470:18]
  wire [63:0] read_medeleg = reg_medeleg & 64'hF0B55D;	// @[CSR.scala:470:18, :471:38]
  reg         reg_mip_seip;	// @[CSR.scala:473:20]
  reg         reg_mip_stip;	// @[CSR.scala:473:20]
  reg         reg_mip_ssip;	// @[CSR.scala:473:20]
  reg  [39:0] reg_mepc;	// @[CSR.scala:474:21]
  reg  [63:0] reg_mcause;	// @[CSR.scala:475:27]
  reg  [39:0] reg_mtval;	// @[CSR.scala:476:22]
  reg  [63:0] reg_mscratch;	// @[CSR.scala:478:25]
  reg  [34:0] reg_mtvec;	// @[CSR.scala:481:31]
  reg  [31:0] reg_mcounteren;	// @[CSR.scala:496:18]
  reg  [31:0] reg_scounteren;	// @[CSR.scala:500:18]
  reg  [39:0] reg_sepc;	// @[CSR.scala:534:21]
  reg  [63:0] reg_scause;	// @[CSR.scala:535:23]
  reg  [39:0] reg_stval;	// @[CSR.scala:536:22]
  reg  [63:0] reg_sscratch;	// @[CSR.scala:537:25]
  reg  [38:0] reg_stvec;	// @[CSR.scala:538:22]
  reg  [3:0]  reg_satp_mode;	// @[CSR.scala:539:21]
  reg  [43:0] reg_satp_ppn;	// @[CSR.scala:539:21]
  reg         reg_wfi;	// @[CSR.scala:540:54]
  reg  [4:0]  reg_fflags;	// @[CSR.scala:542:23]
  reg  [2:0]  reg_frm;	// @[CSR.scala:543:20]
  reg  [2:0]  reg_mcountinhibit;	// @[CSR.scala:549:34]
  reg  [5:0]  small_0;	// @[Counters.scala:45:41]
  reg  [57:0] large_0;	// @[Counters.scala:50:31]
  wire [63:0] value = {large_0, small_0};	// @[Cat.scala:33:92, Counters.scala:45:41, :50:31]
  reg  [5:0]  small_1;	// @[Counters.scala:45:41]
  reg  [57:0] large_1;	// @[Counters.scala:50:31]
  wire [63:0] value_1 = {large_1, small_1};	// @[Cat.scala:33:92, Counters.scala:45:41, :50:31]
  wire        mip_seip = reg_mip_seip | io_interrupts_seip;	// @[CSR.scala:473:20, :565:57]
  wire [15:0] _GEN = {4'h0, io_interrupts_meip, 1'h0, mip_seip, 1'h0, io_interrupts_mtip, 1'h0, reg_mip_stip, 1'h0, io_interrupts_msip, 1'h0, reg_mip_ssip, 1'h0} & reg_mie[15:0];	// @[CSR.scala:464:20, :473:20, :565:57, :573:56]
  wire [15:0] _GEN_0 = ~(reg_mstatus_prv[1]) | reg_mstatus_mie ? ~(~_GEN | read_mideleg[15:0]) : 16'h0;	// @[CSR.scala:371:28, :467:38, :573:56, :579:{25,51,62,83,85,105}, Mux.scala:27:73]
  wire [10:0] _GEN_1 = reg_mstatus_prv == 2'h0 | reg_mstatus_prv == 2'h1 & reg_mstatus_sie ? _GEN[11:1] & read_mideleg[11:1] : 11'h0;	// @[CSR.scala:371:28, :467:38, :573:56, :580:{25,68,78,98,110,151}, Cat.scala:33:92, Mux.scala:27:73]
  reg  [63:0] reg_misa;	// @[CSR.scala:608:25]
  wire [34:0] _read_mtvec_T_5 = reg_mtvec & {27'h7FFFFFF, ~(reg_mtvec[0] ? 8'hFE : 8'h2)};	// @[CSR.scala:481:31, :1567:{39,41}, package.scala:166:{35,37,41}]
  wire [38:0] _read_stvec_T_5 = reg_stvec & {31'h7FFFFFFF, ~(reg_stvec[0] ? 8'hFE : 8'h2)};	// @[CSR.scala:538:22, :1515:23, :1567:{39,41}, package.scala:166:{35,37,41}]
  wire [39:0] _GEN_2 = {38'h0, ~(reg_misa[2]), 1'h1};	// @[CSR.scala:608:25, :1566:{31,36,45}]
  wire [39:0] _T_30 = ~(~reg_mepc | _GEN_2);	// @[CSR.scala:474:21, :1566:{26,28,31}]
  wire [39:0] _T_44 = ~(~reg_dpc | _GEN_2);	// @[CSR.scala:452:20, :1566:{26,28,31}]
  wire [63:0] sie_mask = reg_mideleg & 64'h2222;	// @[CSR.scala:466:18, :467:38, :704:18]
  wire [39:0] _T_60 = ~(~reg_sepc | _GEN_2);	// @[CSR.scala:534:21, :1566:{26,28,31}]
  reg  [63:0] reg_custom_0;	// @[CSR.scala:751:43]
  wire [11:0] decoded_decoded_invInputs = ~io_rw_addr;	// @[pla.scala:78:21]
  wire [10:0] _decoded_decoded_T = {decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :91:29]
  wire [11:0] _decoded_decoded_T_2 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_4 = {io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [9:0]  _decoded_decoded_T_6 = {decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_8 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_10 = {io_rw_addr[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_12 = {io_rw_addr[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_14 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_16 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_18 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_20 = {io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [9:0]  _decoded_decoded_T_22 = {io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [4:0]  _decoded_decoded_T_24 = {io_rw_addr[7], io_rw_addr[8], decoded_decoded_invInputs[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_26 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_28 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_30 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_32 = {io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_34 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_36 = {io_rw_addr[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_38 = {io_rw_addr[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_40 = {decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_100 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_102 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_104 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_106 = {io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [9:0]  _decoded_decoded_T_108 = {io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_112 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_114 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_118 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_120 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_122 = {io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [5:0]  _decoded_decoded_T_124 = {io_rw_addr[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_126 = {decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], io_rw_addr[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_128 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], io_rw_addr[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [63:0] _reg_bp_0_control_WIRE_1 = ((io_rw_cmd[1] ? _io_rw_rdata_WIRE : 64'h0) | io_rw_wdata) & ~((&(io_rw_cmd[1:0])) ? io_rw_wdata : 64'h0);	// @[CSR.scala:1544:{9,13,30,39,41,45,49,55}, Mux.scala:27:73]
  wire        system_insn = io_rw_cmd == 3'h4;	// @[CSR.scala:609:32, :814:31]
  wire [11:0] _GEN_3 = ~io_rw_addr;	// @[pla.scala:78:21]
  wire        insn_call = system_insn & (&{_GEN_3[0], _GEN_3[1], _GEN_3[2], _GEN_3[3], _GEN_3[4], _GEN_3[5], _GEN_3[6], _GEN_3[7], _GEN_3[8], _GEN_3[9], _GEN_3[10], _GEN_3[11]});	// @[CSR.scala:814:31, :831:83, Cat.scala:33:92, pla.scala:78:21, :91:29, :98:74]
  wire        insn_break = system_insn & (&{io_rw_addr[0], _GEN_3[1], _GEN_3[2], _GEN_3[3], _GEN_3[4], _GEN_3[5], _GEN_3[6], _GEN_3[7], _GEN_3[8], _GEN_3[9], _GEN_3[10], _GEN_3[11]});	// @[CSR.scala:814:31, :831:83, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  wire        insn_ret = system_insn & (|{&{_GEN_3[2], _GEN_3[3], _GEN_3[4], _GEN_3[5], _GEN_3[6], _GEN_3[7], io_rw_addr[8], _GEN_3[10], _GEN_3[11]}, &{io_rw_addr[10], _GEN_3[11]}});	// @[CSR.scala:814:31, :831:83, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  wire [29:0] _GEN_4 = ~(io_decode_0_inst[31:2]);	// @[pla.scala:78:21]
  wire [1:0]  _decoded_orMatrixOutputs_T_10 = {&{io_decode_0_inst[0], _GEN_4[20], _GEN_4[21], _GEN_4[22], _GEN_4[23], _GEN_4[24], _GEN_4[25], io_decode_0_inst[28], _GEN_4[28], _GEN_4[29]}, &{io_decode_0_inst[30], _GEN_4[29]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  wire        allow_sfence_vma = reg_mstatus_prv[1] | ~reg_mstatus_tvm;	// @[CSR.scala:371:28, :844:61, :845:{70,73}]
  wire [31:0] _GEN_5 = {27'h0, io_decode_0_inst[24:20]};	// @[CSR.scala:481:31, :835:27, :849:28, :850:70, package.scala:166:41]
  wire [31:0] _io_decode_0_virtual_access_illegal_T_3 = (reg_mcounteren & 32'h7) >> _GEN_5;	// @[CSR.scala:496:18, :497:32, :850:70]
  wire [31:0] _io_decode_0_virtual_access_illegal_T_11 = (reg_scounteren & 32'h7) >> _GEN_5;	// @[CSR.scala:497:32, :500:18, :501:38, :850:70, :851:75]
  wire        _io_decode_0_fp_illegal_output = reg_mstatus_fs == 2'h0 | ~(reg_misa[5]);	// @[CSR.scala:371:28, :608:25, :853:{39,91,94,103}]
  wire [3:0]  _GEN_6 = ~(io_decode_0_inst[31:28]);	// @[CSR.scala:835:27, pla.scala:78:21]
  wire [3:0]  _io_decode_0_fp_csr_T = {_GEN_6[0], _GEN_6[1], _GEN_6[2], _GEN_6[3]};	// @[Cat.scala:33:92, pla.scala:78:21, :91:29]
  wire        _io_decode_0_virtual_access_illegal_T_24 = io_decode_0_inst[31:20] == 12'h180;	// @[CSR.scala:835:27, :837:93]
  wire        csr_exists =
    io_decode_0_inst[31:20] == 12'h7A0 | io_decode_0_inst[31:20] == 12'h7A1 | io_decode_0_inst[31:20] == 12'h7A2 | io_decode_0_inst[31:20] == 12'h7A3 | io_decode_0_inst[31:20] == 12'h301 | io_decode_0_inst[31:20] == 12'h300 | io_decode_0_inst[31:20] == 12'h305 | io_decode_0_inst[31:20] == 12'h344 | io_decode_0_inst[31:20] == 12'h304 | io_decode_0_inst[31:20] == 12'h340 | io_decode_0_inst[31:20] == 12'h341 | io_decode_0_inst[31:20] == 12'h343 | io_decode_0_inst[31:20] == 12'h342 | io_decode_0_inst[31:20] == 12'hF14 | io_decode_0_inst[31:20] == 12'h7B0 | io_decode_0_inst[31:20] == 12'h7B1 | io_decode_0_inst[31:20] == 12'h7B2 | io_decode_0_inst[31:20] == 12'h1 | io_decode_0_inst[31:20] == 12'h2 | io_decode_0_inst[31:20] == 12'h3 | io_decode_0_inst[31:20] == 12'h320 | io_decode_0_inst[31:20] == 12'hB00 | io_decode_0_inst[31:20] == 12'hB02 | io_decode_0_inst[31:20] == 12'h323 | io_decode_0_inst[31:20] == 12'hB03 | io_decode_0_inst[31:20] == 12'hC03 | io_decode_0_inst[31:20] == 12'h324 | io_decode_0_inst[31:20] == 12'hB04 | io_decode_0_inst[31:20] == 12'hC04 | io_decode_0_inst[31:20] == 12'h325 | io_decode_0_inst[31:20] == 12'hB05 | io_decode_0_inst[31:20] == 12'hC05 | io_decode_0_inst[31:20] == 12'h326 | io_decode_0_inst[31:20] == 12'hB06 | io_decode_0_inst[31:20] == 12'hC06 | io_decode_0_inst[31:20] == 12'h327 | io_decode_0_inst[31:20] == 12'hB07 | io_decode_0_inst[31:20] == 12'hC07 | io_decode_0_inst[31:20] == 12'h328 | io_decode_0_inst[31:20] == 12'hB08 | io_decode_0_inst[31:20] == 12'hC08 | io_decode_0_inst[31:20] == 12'h329 | io_decode_0_inst[31:20] == 12'hB09 | io_decode_0_inst[31:20] == 12'hC09 | io_decode_0_inst[31:20] == 12'h32A | io_decode_0_inst[31:20] == 12'hB0A | io_decode_0_inst[31:20] == 12'hC0A | io_decode_0_inst[31:20] == 12'h32B | io_decode_0_inst[31:20] == 12'hB0B | io_decode_0_inst[31:20] == 12'hC0B | io_decode_0_inst[31:20] == 12'h32C | io_decode_0_inst[31:20] == 12'hB0C | io_decode_0_inst[31:20] == 12'hC0C | io_decode_0_inst[31:20] == 12'h32D | io_decode_0_inst[31:20] == 12'hB0D
    | io_decode_0_inst[31:20] == 12'hC0D | io_decode_0_inst[31:20] == 12'h32E | io_decode_0_inst[31:20] == 12'hB0E | io_decode_0_inst[31:20] == 12'hC0E | io_decode_0_inst[31:20] == 12'h32F | io_decode_0_inst[31:20] == 12'hB0F | io_decode_0_inst[31:20] == 12'hC0F | io_decode_0_inst[31:20] == 12'h330 | io_decode_0_inst[31:20] == 12'hB10 | io_decode_0_inst[31:20] == 12'hC10 | io_decode_0_inst[31:20] == 12'h331 | io_decode_0_inst[31:20] == 12'hB11 | io_decode_0_inst[31:20] == 12'hC11 | io_decode_0_inst[31:20] == 12'h332 | io_decode_0_inst[31:20] == 12'hB12 | io_decode_0_inst[31:20] == 12'hC12 | io_decode_0_inst[31:20] == 12'h333 | io_decode_0_inst[31:20] == 12'hB13 | io_decode_0_inst[31:20] == 12'hC13 | io_decode_0_inst[31:20] == 12'h334 | io_decode_0_inst[31:20] == 12'hB14 | io_decode_0_inst[31:20] == 12'hC14 | io_decode_0_inst[31:20] == 12'h335 | io_decode_0_inst[31:20] == 12'hB15 | io_decode_0_inst[31:20] == 12'hC15 | io_decode_0_inst[31:20] == 12'h336 | io_decode_0_inst[31:20] == 12'hB16 | io_decode_0_inst[31:20] == 12'hC16 | io_decode_0_inst[31:20] == 12'h337 | io_decode_0_inst[31:20] == 12'hB17 | io_decode_0_inst[31:20] == 12'hC17 | io_decode_0_inst[31:20] == 12'h338 | io_decode_0_inst[31:20] == 12'hB18 | io_decode_0_inst[31:20] == 12'hC18 | io_decode_0_inst[31:20] == 12'h339 | io_decode_0_inst[31:20] == 12'hB19 | io_decode_0_inst[31:20] == 12'hC19 | io_decode_0_inst[31:20] == 12'h33A | io_decode_0_inst[31:20] == 12'hB1A | io_decode_0_inst[31:20] == 12'hC1A | io_decode_0_inst[31:20] == 12'h33B | io_decode_0_inst[31:20] == 12'hB1B | io_decode_0_inst[31:20] == 12'hC1B | io_decode_0_inst[31:20] == 12'h33C | io_decode_0_inst[31:20] == 12'hB1C | io_decode_0_inst[31:20] == 12'hC1C | io_decode_0_inst[31:20] == 12'h33D | io_decode_0_inst[31:20] == 12'hB1D | io_decode_0_inst[31:20] == 12'hC1D | io_decode_0_inst[31:20] == 12'h33E | io_decode_0_inst[31:20] == 12'hB1E | io_decode_0_inst[31:20] == 12'hC1E | io_decode_0_inst[31:20] == 12'h33F | io_decode_0_inst[31:20] == 12'hB1F | io_decode_0_inst[31:20] == 12'hC1F
    | io_decode_0_inst[31:20] == 12'h306 | io_decode_0_inst[31:20] == 12'hC00 | io_decode_0_inst[31:20] == 12'hC02 | io_decode_0_inst[31:20] == 12'h100 | io_decode_0_inst[31:20] == 12'h144 | io_decode_0_inst[31:20] == 12'h104 | io_decode_0_inst[31:20] == 12'h140 | io_decode_0_inst[31:20] == 12'h142 | io_decode_0_inst[31:20] == 12'h143 | _io_decode_0_virtual_access_illegal_T_24 | io_decode_0_inst[31:20] == 12'h141 | io_decode_0_inst[31:20] == 12'h105 | io_decode_0_inst[31:20] == 12'h106 | io_decode_0_inst[31:20] == 12'h303 | io_decode_0_inst[31:20] == 12'h302 | io_decode_0_inst[31:20] == 12'h7C1 | io_decode_0_inst[31:20] == 12'hF12 | io_decode_0_inst[31:20] == 12'hF11 | io_decode_0_inst[31:20] == 12'hF13;	// @[CSR.scala:835:27, :837:{93,111}, :869:25, package.scala:205:47]
  wire        _io_decode_0_system_illegal_T = reg_mstatus_prv < io_decode_0_inst[29:28];	// @[CSR.scala:175:36, :371:28, :835:27, :857:42]
  wire [5:0]  _GEN_7 = ~(io_decode_0_inst[31:26]);	// @[CSR.scala:835:27, pla.scala:78:21]
  wire [11:0] io_decode_0_write_flush_addr_m = io_decode_0_inst[31:20] | 12'h300;	// @[CSR.scala:835:27, :869:25]
  wire [3:0]  _GEN_8 = {2'h0, reg_mstatus_prv};	// @[CSR.scala:371:28, :896:40]
  wire [63:0] _GEN_9 = {60'h0, _GEN_8 - 4'h8};	// @[CSR.scala:896:{8,40}]
  wire [63:0] cause = insn_call ? _GEN_9 : insn_break ? 64'h3 : io_cause;	// @[CSR.scala:831:83, :896:8, :897:14]
  wire        _causeIsDebugTrigger_T_2 = cause[7:0] == 8'hE;	// @[CSR.scala:896:8, :898:25, :899:53]
  wire        causeIsDebugInt = cause[63] & _causeIsDebugTrigger_T_2;	// @[CSR.scala:896:8, :899:{30,39,53}]
  wire        causeIsDebugTrigger = ~(cause[63]) & _causeIsDebugTrigger_T_2;	// @[CSR.scala:896:8, :899:{30,53}, :900:{29,44}]
  wire [3:0]  _causeIsDebugBreak_T_4 = {reg_dcsr_ebreakm, 1'h0, reg_dcsr_ebreaks, reg_dcsr_ebreaku} >> _GEN_8;	// @[CSR.scala:379:25, :896:40, :901:134, Cat.scala:33:92]
  wire        trapToDebug = reg_singleStepped | causeIsDebugInt | causeIsDebugTrigger | ~(cause[63]) & insn_break & _causeIsDebugBreak_T_4[0] | reg_debug;	// @[CSR.scala:451:26, :455:30, :831:83, :896:8, :899:{30,39}, :900:44, :901:{27,56,134}, :902:119]
  wire [63:0] _GEN_10 = {56'h0, cause[7:0]};	// @[CSR.scala:896:8, :898:25, :906:100]
  wire [63:0] _delegate_T_3 = read_mideleg >> _GEN_10;	// @[CSR.scala:467:38, :906:100]
  wire [63:0] _delegate_T_5 = read_medeleg >> _GEN_10;	// @[CSR.scala:471:38, :906:{100,126}]
  wire        delegate = ~(reg_mstatus_prv[1]) & (cause[63] ? _delegate_T_3[0] : _delegate_T_5[0]);	// @[CSR.scala:371:28, :579:51, :896:8, :899:30, :906:{66,72,100,126}]
  wire [39:0] _GEN_11 = delegate ? {_read_stvec_T_5[38], _read_stvec_T_5} : {5'h0, _read_mtvec_T_5};	// @[CSR.scala:906:66, :914:19, Cat.scala:33:92, package.scala:124:38, :166:35]
  wire        _exception_T = insn_call | insn_break;	// @[CSR.scala:831:83, :936:24]
  assign _io_singleStep_output = reg_dcsr_step & ~reg_debug;	// @[CSR.scala:379:25, :451:26, :864:45, :937:34]
  wire        _io_trace_0_exception_output = _exception_T | io_exception;	// @[CSR.scala:936:24, :956:43]
  wire [1:0]  _GEN_12 = {~delegate, 1'h1};	// @[CSR.scala:534:21, :906:66, :972:24, :982:31, :992:37, :1000:15, :1001:35, :1013:15, :1025:15]
  wire        _T_391 = io_rw_addr[10] & io_rw_addr[7];	// @[CSR.scala:1068:{43,48,61}]
  wire [1:0]  _GEN_13 = {1'h0, reg_mstatus_spp};	// @[CSR.scala:371:28, :1051:48, :1052:29, :1068:66]
  wire [1:0]  ret_prv = io_rw_addr[9] ? (_T_391 ? reg_dcsr_prv : reg_mstatus_mpp) : _GEN_13;	// @[CSR.scala:371:28, :379:25, :1051:{43,48}, :1052:29, :1068:{48,66}, :1069:15, :1073:65]
  wire        _io_csr_stall_output = reg_wfi | io_status_cease_r;	// @[CSR.scala:540:54, :1095:27, Reg.scala:35:20]
  wire [15:0] _io_rw_rdata_T_7 = (&_decoded_decoded_T_108) ? {4'h0, io_interrupts_meip, 1'h0, mip_seip, 1'h0, io_interrupts_mtip, 1'h0, reg_mip_stip, 1'h0, io_interrupts_msip, 1'h0, reg_mip_ssip, 1'h0} : 16'h0;	// @[CSR.scala:473:20, :565:57, :569:22, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [31:0] _io_rw_rdata_T_14 = (&_decoded_decoded_T_118) ? {16'h4000, reg_dcsr_ebreakm, 1'h0, reg_dcsr_ebreaks, reg_dcsr_ebreaku, 3'h0, reg_dcsr_cause, 3'h0, reg_dcsr_step, reg_dcsr_prv} : 32'h0;	// @[CSR.scala:367:47, :376:44, :379:25, :630:27, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [4:0]  _io_rw_rdata_T_17 = (&_decoded_decoded_T) ? reg_fflags : 5'h0;	// @[CSR.scala:542:23, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [2:0]  _io_rw_rdata_T_18 = (&_decoded_decoded_T_2) ? reg_frm : 3'h0;	// @[CSR.scala:376:44, :543:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [7:0]  _io_rw_rdata_T_19 = (&_decoded_decoded_T_4) ? {reg_frm, reg_fflags} : 8'h0;	// @[CSR.scala:542:23, :543:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [2:0]  _io_rw_rdata_T_20 = (&_decoded_decoded_T_40) ? reg_mcountinhibit : 3'h0;	// @[CSR.scala:376:44, :549:34, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [2:0]  _GEN_14 = (&_decoded_decoded_T_38) ? reg_mcounteren[2:0] : 3'h0;	// @[CSR.scala:376:44, :496:18, :497:32, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [2:0]  _GEN_15 = (&_decoded_decoded_T_12) ? reg_scounteren[2:0] : 3'h0;	// @[CSR.scala:376:44, :500:18, :501:38, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [13:0] _GEN_16 = _io_rw_rdata_T_7[15:2] | _io_rw_rdata_T_14[15:2];	// @[Mux.scala:27:73]
  wire [2:0]  _GEN_17 = _GEN_16[2:0] | _io_rw_rdata_T_17[4:2];	// @[Mux.scala:27:73]
  wire [1:0]  _GEN_18 = _io_rw_rdata_T_7[1:0] | ((&{io_rw_addr[2], decoded_decoded_invInputs[3], io_rw_addr[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], io_rw_addr[11]}) ? io_hartid : 2'h0) | _io_rw_rdata_T_14[1:0] | _io_rw_rdata_T_17[1:0] | _io_rw_rdata_T_18[1:0] | _io_rw_rdata_T_19[1:0] | _io_rw_rdata_T_20[1:0] | _GEN_14[1:0] | _GEN_15[1:0];	// @[Cat.scala:33:92, Mux.scala:27:73, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign _io_rw_rdata_WIRE =
    ((&_decoded_decoded_T_112) ? {4'h2, reg_bp_0_control_dmode, 46'h40000000000, reg_bp_0_control_action, reg_bp_0_control_chain, 2'h0, reg_bp_0_control_tmatch, reg_bp_0_control_m, 1'h0, reg_bp_0_control_s, reg_bp_0_control_u, reg_bp_0_control_x, reg_bp_0_control_w, reg_bp_0_control_r} : 64'h0) | ((&_decoded_decoded_T_114) ? {{25{reg_bp_0_address[38]}}, reg_bp_0_address} : 64'h0) | ((&_decoded_decoded_T_28) ? reg_misa : 64'h0) | ((&_decoded_decoded_T_26) ? {25'h1000000, reg_mstatus_gva, 15'h1400, reg_mstatus_tsr, reg_mstatus_tw, reg_mstatus_tvm, reg_mstatus_mxr, reg_mstatus_sum, reg_mstatus_mprv, 2'h3, reg_mstatus_fs, reg_mstatus_mpp, 2'h0, reg_mstatus_spp, reg_mstatus_mpie, 1'h0, reg_mstatus_spie, 1'h0, reg_mstatus_mie, 1'h0, reg_mstatus_sie, 1'h0} : 64'h0) | ((&_decoded_decoded_T_36) ? {29'h0, _read_mtvec_T_5} : 64'h0) | ((&_decoded_decoded_T_34) ? reg_mie : 64'h0) | ((&_decoded_decoded_T_100) ? reg_mscratch : 64'h0) | ((&_decoded_decoded_T_102) ? {{24{_T_30[39]}}, _T_30} : 64'h0) | ((&_decoded_decoded_T_106) ? {{24{reg_mtval[39]}}, reg_mtval} : 64'h0) | ((&_decoded_decoded_T_104) ? reg_mcause : 64'h0) | ((&_decoded_decoded_T_120) ? {{24{_T_44[39]}}, _T_44} : 64'h0) | ((&_decoded_decoded_T_122) ? reg_dscratch0 : 64'h0) | ((&_decoded_decoded_T_126) ? value_1 : 64'h0) | ((&_decoded_decoded_T_128) ? value : 64'h0) | ((&{decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], io_rw_addr[10], io_rw_addr[11]}) ? value_1 : 64'h0) | ((&{decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], io_rw_addr[10], io_rw_addr[11]}) ? value : 64'h0)
    | ((&_decoded_decoded_T_6) ? {44'h80000002000, reg_mstatus_mxr, reg_mstatus_sum, 3'h3, reg_mstatus_fs, 4'h0, reg_mstatus_spp, 2'h0, reg_mstatus_spie, 3'h0, reg_mstatus_sie, 1'h0} : 64'h0) | ((&_decoded_decoded_T_22) ? {52'h0, io_interrupts_meip, 1'h0, mip_seip, 1'h0, io_interrupts_mtip, 1'h0, reg_mip_stip, 1'h0, io_interrupts_msip, 1'h0, reg_mip_ssip, 1'h0} & sie_mask : 64'h0) | ((&_decoded_decoded_T_8) ? reg_mie & sie_mask : 64'h0) | ((&_decoded_decoded_T_14) ? reg_sscratch : 64'h0) | ((&_decoded_decoded_T_18) ? reg_scause : 64'h0) | ((&_decoded_decoded_T_20) ? {{24{reg_stval[39]}}, reg_stval} : 64'h0) | ((&_decoded_decoded_T_24) ? {reg_satp_mode, 16'h0, reg_satp_ppn} : 64'h0) | ((&_decoded_decoded_T_16) ? {{24{_T_60[39]}}, _T_60} : 64'h0) | ((&_decoded_decoded_T_10) ? {{25{_read_stvec_T_5[38]}}, _read_stvec_T_5} : 64'h0) | ((&_decoded_decoded_T_32) ? read_mideleg : 64'h0) | ((&_decoded_decoded_T_30) ? read_medeleg : 64'h0) | ((&_decoded_decoded_T_124) ? reg_custom_0 : 64'h0) | {32'h0, _io_rw_rdata_T_14[31:16], _GEN_16[13:6], _GEN_16[5:3] | _io_rw_rdata_T_19[7:5], _GEN_17[2:1] | _io_rw_rdata_T_19[4:3], _GEN_17[0] | _io_rw_rdata_T_18[2] | _io_rw_rdata_T_19[2] | _io_rw_rdata_T_20[2] | _GEN_14[2] | _GEN_15[2], _GEN_18[1], _GEN_18[0] | (&{decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], io_rw_addr[11]})} | ((&{io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], io_rw_addr[11]}) ? 64'h20181004 : 64'h0);	// @[Bitwise.scala:77:12, CSR.scala:367:47, :371:28, :376:44, :407:50, :453:26, :461:19, :464:20, :467:38, :471:38, :473:20, :475:27, :476:22, :478:25, :535:23, :536:22, :537:25, :539:21, :565:57, :573:56, :608:25, :609:32, :615:48, :704:18, :707:28, :708:29, :722:{51,58}, :728:43, :751:43, :931:17, :1398:67, :1566:26, Cat.scala:33:92, Mux.scala:27:73, package.scala:124:38, :155:13, :166:35, pla.scala:78:21, :90:45, :91:29, :98:74]
  wire        csr_wen = io_rw_cmd == 3'h6 | (&io_rw_cmd) | io_rw_cmd == 3'h5;	// @[Mux.scala:47:70, package.scala:16:47, :73:59]
  wire        _GEN_19 = ~(io_rw_addr[9]) | _T_391;	// @[CSR.scala:971:20, :1051:{32,43,48}, :1068:{48,66}, :1073:65]
  wire [47:0] _GEN_20 = ((io_rw_cmd[1] ? {reg_bp_0_control_dmode, 46'h40000000000, reg_bp_0_control_action} : 48'h0) | io_rw_wdata[59:12]) & ~((&(io_rw_cmd[1:0])) ? io_rw_wdata[59:12] : 48'h0);	// @[CSR.scala:461:19, :1398:67, :1544:{9,13,30,39,41,45,49,55}]
  wire        dMode = _GEN_20[47] & reg_debug;	// @[CSR.scala:451:26, :1398:96, :1399:38, :1544:39]
  wire [6:0]  nextSmall = {1'h0, small_0} + {6'h0, io_retire};	// @[Counters.scala:45:41, :46:33]
  wire        _GEN_21 = insn_ret & ~(io_rw_addr[9]);	// @[CSR.scala:831:83, :971:20, :1049:19, :1051:{32,43,48}, :1052:29, :1053:25]
  wire [39:0] _epc_T_1 = ~io_pc | 40'h1;	// @[CSR.scala:1565:{28,31}]
  wire        _GEN_22 = _io_trace_0_exception_output & trapToDebug & ~reg_debug;	// @[CSR.scala:451:26, :864:45, :902:119, :956:43, :971:20, :972:24, :973:25, :975:19]
  wire        _GEN_23 = ~_io_trace_0_exception_output | trapToDebug | ~delegate;	// @[CSR.scala:534:21, :902:119, :906:66, :956:43, :971:20, :972:24, :982:31, :992:37, :1001:35]
  wire        _GEN_24 = ~_io_trace_0_exception_output | trapToDebug | delegate;	// @[CSR.scala:371:28, :534:21, :902:119, :906:66, :956:43, :971:20, :972:24]
  wire [8:0]  _GEN_25 = ((io_rw_cmd[1] ? {reg_mip_seip, 3'h0, reg_mip_stip, 3'h0, reg_mip_ssip} : 9'h0) | io_rw_wdata[9:1]) & ~((&(io_rw_cmd[1:0])) ? io_rw_wdata[9:1] : 9'h0);	// @[CSR.scala:376:44, :473:20, :1199:59, :1544:{9,13,30,39,41,45,49,55}, Mux.scala:27:73]
  wire [39:0] _GEN_26 = ~(_reg_bp_0_control_WIRE_1[39:0]) | 40'h1;	// @[CSR.scala:1544:39, :1565:{28,31}]
  wire        _GEN_27 = csr_wen & (&_decoded_decoded_T_24) & (_reg_bp_0_control_WIRE_1[63:60] == 4'h0 | _reg_bp_0_control_WIRE_1[63:60] == 4'h8);	// @[CSR.scala:539:21, :1152:18, :1281:38, :1283:40, :1284:67, :1285:27, :1544:39, Cat.scala:33:92, Mux.scala:47:70, package.scala:16:47, :73:59, pla.scala:98:74]
  wire        _T_1612 = ~reg_bp_0_control_dmode | reg_debug;	// @[CSR.scala:451:26, :461:19, :1379:{39,57}]
  wire        _GEN_28 = csr_wen & _T_1612 & (&_decoded_decoded_T_112);	// @[CSR.scala:461:19, :1152:18, :1379:{57,72}, :1391:44, :1392:24, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_29 = _GEN_23 & reg_mstatus_sie;	// @[CSR.scala:371:28, :534:21, :971:20, :972:24]
  wire        _GEN_30 = _GEN_21 | (_GEN_23 ? reg_mstatus_spie : reg_mstatus_sie);	// @[CSR.scala:371:28, :534:21, :971:20, :972:24, :1049:19, :1051:48, :1052:29, :1053:25, :1054:26]
  wire        _GEN_31 = ~_GEN_21 & (_GEN_23 ? reg_mstatus_spp : reg_mstatus_prv[0]);	// @[CSR.scala:371:28, :534:21, :971:20, :972:24, :1011:23, :1049:19, :1051:48, :1052:29, :1053:25, :1055:25]
  always @(posedge clock) begin
    if (reset) begin
      reg_mstatus_prv <= 2'h3;	// @[CSR.scala:371:28]
      reg_mstatus_gva <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_tsr <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_tw <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_tvm <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_mxr <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_sum <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_mprv <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_fs <= 2'h0;	// @[CSR.scala:371:28]
      reg_mstatus_mpp <= 2'h3;	// @[CSR.scala:371:28]
      reg_mstatus_spp <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_mpie <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_spie <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_mie <= 1'h0;	// @[CSR.scala:371:28]
      reg_mstatus_sie <= 1'h0;	// @[CSR.scala:371:28]
      reg_dcsr_ebreakm <= 1'h0;	// @[CSR.scala:379:25]
      reg_dcsr_ebreaks <= 1'h0;	// @[CSR.scala:379:25]
      reg_dcsr_ebreaku <= 1'h0;	// @[CSR.scala:379:25]
      reg_dcsr_cause <= 3'h0;	// @[CSR.scala:376:44, :379:25]
      reg_dcsr_step <= 1'h0;	// @[CSR.scala:379:25]
      reg_dcsr_prv <= 2'h3;	// @[CSR.scala:379:25]
      reg_debug <= 1'h0;	// @[CSR.scala:451:26]
      reg_bp_0_control_dmode <= 1'h0;	// @[CSR.scala:461:19]
      reg_bp_0_control_action <= 1'h0;	// @[CSR.scala:461:19]
      reg_bp_0_control_x <= 1'h0;	// @[CSR.scala:461:19]
      reg_bp_0_control_w <= 1'h0;	// @[CSR.scala:461:19]
      reg_bp_0_control_r <= 1'h0;	// @[CSR.scala:461:19]
      reg_mcause <= 64'h0;	// @[CSR.scala:475:27]
      reg_mtvec <= 35'h0;	// @[CSR.scala:481:31]
      reg_satp_mode <= 4'h0;	// @[CSR.scala:539:21]
      reg_mcountinhibit <= 3'h0;	// @[CSR.scala:376:44, :549:34]
      small_0 <= 6'h0;	// @[Counters.scala:45:41]
      large_0 <= 58'h0;	// @[Counters.scala:50:31]
      reg_misa <= 64'h800000000094112D;	// @[CSR.scala:608:25]
      reg_custom_0 <= 64'h208;	// @[CSR.scala:751:43]
      io_status_cease_r <= 1'h0;	// @[Reg.scala:35:20]
    end
    else begin
      if ((insn_ret ? ret_prv : _io_trace_0_exception_output ? (trapToDebug ? (reg_debug ? reg_mstatus_prv : 2'h3) : _GEN_12) : reg_mstatus_prv) == 2'h2)	// @[CSR.scala:371:28, :373:28, :451:26, :831:83, :902:119, :956:43, :971:20, :972:24, :973:25, :980:17, :982:31, :992:37, :1000:15, :1001:35, :1013:15, :1025:15, :1049:19, :1051:48, :1052:29, :1068:66, :1088:13, :1548:35]
        reg_mstatus_prv <= 2'h0;	// @[CSR.scala:371:28]
      else if (insn_ret) begin	// @[CSR.scala:831:83]
        if (io_rw_addr[9]) begin	// @[CSR.scala:1051:43]
          if (_T_391)	// @[CSR.scala:1068:48]
            reg_mstatus_prv <= reg_dcsr_prv;	// @[CSR.scala:371:28, :379:25]
          else	// @[CSR.scala:1068:48]
            reg_mstatus_prv <= reg_mstatus_mpp;	// @[CSR.scala:371:28]
        end
        else	// @[CSR.scala:1051:43]
          reg_mstatus_prv <= _GEN_13;	// @[CSR.scala:371:28, :1051:48, :1052:29, :1068:66]
      end
      else if (_io_trace_0_exception_output) begin	// @[CSR.scala:956:43]
        if (trapToDebug) begin	// @[CSR.scala:902:119]
          if (reg_debug) begin	// @[CSR.scala:451:26]
          end
          else	// @[CSR.scala:451:26]
            reg_mstatus_prv <= 2'h3;	// @[CSR.scala:371:28]
        end
        else	// @[CSR.scala:902:119]
          reg_mstatus_prv <= _GEN_12;	// @[CSR.scala:371:28, :992:37, :1000:15, :1001:35, :1013:15, :1025:15]
      end
      if (_GEN_24) begin	// @[CSR.scala:371:28, :971:20, :972:24]
      end
      else	// @[CSR.scala:371:28, :971:20, :972:24]
        reg_mstatus_gva <= io_gva;	// @[CSR.scala:371:28]
      if (csr_wen & (&_decoded_decoded_T_26)) begin	// @[CSR.scala:1049:19, :1152:18, :1156:39, :1158:23, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mstatus_tsr <= _reg_bp_0_control_WIRE_1[22];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        reg_mstatus_tw <= _reg_bp_0_control_WIRE_1[21];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        reg_mstatus_tvm <= _reg_bp_0_control_WIRE_1[20];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        reg_mstatus_mprv <= _reg_bp_0_control_WIRE_1[17];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        if (_reg_bp_0_control_WIRE_1[12:11] == 2'h2)	// @[CSR.scala:1157:39, :1544:39, :1548:35]
          reg_mstatus_mpp <= 2'h0;	// @[CSR.scala:371:28]
        else	// @[CSR.scala:1548:35]
          reg_mstatus_mpp <= _reg_bp_0_control_WIRE_1[12:11];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        reg_mstatus_mpie <= _reg_bp_0_control_WIRE_1[7];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        reg_mstatus_mie <= _reg_bp_0_control_WIRE_1[3];	// @[CSR.scala:371:28, :1157:39, :1544:39]
      end
      else begin	// @[CSR.scala:1049:19, :1152:18, :1156:39, :1158:23]
        reg_mstatus_mprv <= ~(insn_ret & ~(ret_prv[1])) & reg_mstatus_mprv;	// @[CSR.scala:371:28, :831:83, :1049:19, :1051:48, :1052:29, :1068:66, :1089:{34,46}, :1090:24]
        if (~insn_ret | _GEN_19) begin	// @[CSR.scala:831:83, :971:20, :1049:19, :1051:48, :1068:66, :1073:65]
          if (_GEN_24) begin	// @[CSR.scala:371:28, :971:20, :972:24]
          end
          else	// @[CSR.scala:371:28, :971:20, :972:24]
            reg_mstatus_mpp <= reg_mstatus_prv;	// @[CSR.scala:371:28]
          reg_mstatus_mie <= _GEN_24 & reg_mstatus_mie;	// @[CSR.scala:371:28, :971:20, :972:24]
        end
        else begin	// @[CSR.scala:971:20, :1049:19, :1051:48]
          reg_mstatus_mpp <= 2'h0;	// @[CSR.scala:371:28]
          reg_mstatus_mie <= reg_mstatus_mpie;	// @[CSR.scala:371:28]
        end
        reg_mstatus_mpie <= insn_ret & ~_GEN_19 | (_GEN_24 ? reg_mstatus_mpie : reg_mstatus_mie);	// @[CSR.scala:371:28, :831:83, :971:20, :972:24, :1049:19, :1051:48, :1068:66, :1073:65]
      end
      if (csr_wen) begin	// @[package.scala:73:59]
        if (&_decoded_decoded_T_6) begin	// @[Cat.scala:33:92, pla.scala:98:74]
          reg_mstatus_mxr <= _reg_bp_0_control_WIRE_1[19];	// @[CSR.scala:371:28, :1266:41, :1544:39]
          reg_mstatus_sum <= _reg_bp_0_control_WIRE_1[18];	// @[CSR.scala:371:28, :1266:41, :1544:39]
          reg_mstatus_fs <= {2{|(_reg_bp_0_control_WIRE_1[14:13])}};	// @[Bitwise.scala:77:12, CSR.scala:371:28, :1266:41, :1544:39, :1569:73]
          reg_mstatus_spp <= _reg_bp_0_control_WIRE_1[8];	// @[CSR.scala:371:28, :1266:41, :1544:39]
          reg_mstatus_spie <= _reg_bp_0_control_WIRE_1[5];	// @[CSR.scala:371:28, :1266:41, :1544:39]
          reg_mstatus_sie <= _reg_bp_0_control_WIRE_1[1];	// @[CSR.scala:371:28, :1266:41, :1544:39]
        end
        else if (&_decoded_decoded_T_26) begin	// @[Cat.scala:33:92, pla.scala:98:74]
          reg_mstatus_mxr <= _reg_bp_0_control_WIRE_1[19];	// @[CSR.scala:371:28, :1157:39, :1544:39]
          reg_mstatus_sum <= _reg_bp_0_control_WIRE_1[18];	// @[CSR.scala:371:28, :1157:39, :1544:39]
          reg_mstatus_fs <= {2{|(_reg_bp_0_control_WIRE_1[14:13])}};	// @[Bitwise.scala:77:12, CSR.scala:371:28, :1157:39, :1544:39, :1569:73]
          reg_mstatus_spp <= _reg_bp_0_control_WIRE_1[8];	// @[CSR.scala:371:28, :1157:39, :1544:39]
          reg_mstatus_spie <= _reg_bp_0_control_WIRE_1[5];	// @[CSR.scala:371:28, :1157:39, :1544:39]
          reg_mstatus_sie <= _reg_bp_0_control_WIRE_1[1];	// @[CSR.scala:371:28, :1157:39, :1544:39]
        end
        else begin	// @[pla.scala:98:74]
          reg_mstatus_spp <= _GEN_31;	// @[CSR.scala:371:28, :971:20, :1049:19, :1051:48, :1052:29, :1055:25]
          reg_mstatus_spie <= _GEN_30;	// @[CSR.scala:371:28, :971:20, :1049:19, :1051:48, :1052:29, :1054:26]
          if (_GEN_21)	// @[CSR.scala:971:20, :1049:19, :1051:48, :1052:29, :1053:25]
            reg_mstatus_sie <= reg_mstatus_spie;	// @[CSR.scala:371:28]
          else	// @[CSR.scala:971:20, :1049:19, :1051:48, :1052:29, :1053:25]
            reg_mstatus_sie <= _GEN_29;	// @[CSR.scala:371:28, :971:20, :972:24]
        end
      end
      else begin	// @[package.scala:73:59]
        reg_mstatus_spp <= _GEN_31;	// @[CSR.scala:371:28, :971:20, :1049:19, :1051:48, :1052:29, :1055:25]
        reg_mstatus_spie <= _GEN_30;	// @[CSR.scala:371:28, :971:20, :1049:19, :1051:48, :1052:29, :1054:26]
        if (_GEN_21)	// @[CSR.scala:971:20, :1049:19, :1051:48, :1052:29, :1053:25]
          reg_mstatus_sie <= reg_mstatus_spie;	// @[CSR.scala:371:28]
        else	// @[CSR.scala:971:20, :1049:19, :1051:48, :1052:29, :1053:25]
          reg_mstatus_sie <= _GEN_29;	// @[CSR.scala:371:28, :971:20, :972:24]
      end
      if (csr_wen & (&_decoded_decoded_T_118)) begin	// @[CSR.scala:379:25, :1152:18, :1249:38, :1251:23, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_dcsr_ebreakm <= _reg_bp_0_control_WIRE_1[15];	// @[CSR.scala:379:25, :1250:38, :1544:39]
        reg_dcsr_ebreaks <= _reg_bp_0_control_WIRE_1[13];	// @[CSR.scala:379:25, :1250:38, :1544:39]
        reg_dcsr_ebreaku <= _reg_bp_0_control_WIRE_1[12];	// @[CSR.scala:379:25, :1250:38, :1544:39]
        reg_dcsr_step <= _reg_bp_0_control_WIRE_1[2];	// @[CSR.scala:379:25, :1250:38, :1544:39]
        if (_reg_bp_0_control_WIRE_1[1:0] == 2'h2)	// @[CSR.scala:1250:38, :1544:39, :1548:35]
          reg_dcsr_prv <= 2'h0;	// @[CSR.scala:379:25]
        else	// @[CSR.scala:1548:35]
          reg_dcsr_prv <= _reg_bp_0_control_WIRE_1[1:0];	// @[CSR.scala:379:25, :1250:38, :1544:39]
      end
      else if (_GEN_22)	// @[CSR.scala:451:26, :971:20, :972:24, :973:25, :975:19]
        reg_dcsr_prv <= reg_mstatus_prv;	// @[CSR.scala:371:28, :379:25]
      if (_GEN_22) begin	// @[CSR.scala:451:26, :971:20, :972:24, :973:25, :975:19]
        if (reg_singleStepped)	// @[CSR.scala:455:30]
          reg_dcsr_cause <= 3'h4;	// @[CSR.scala:379:25, :609:32]
        else	// @[CSR.scala:455:30]
          reg_dcsr_cause <= {1'h0, causeIsDebugInt ? 2'h3 : causeIsDebugTrigger ? 2'h2 : 2'h1};	// @[CSR.scala:379:25, :899:39, :900:44, :977:{30,58,90}, :1548:35, Cat.scala:33:92]
      end
      reg_debug <= (~insn_ret | ~(io_rw_addr[9]) | ~_T_391) & (_GEN_22 | reg_debug);	// @[CSR.scala:451:26, :831:83, :971:20, :972:24, :973:25, :975:19, :1049:19, :1051:{43,48}, :1068:{48,66}, :1071:17]
      if (_GEN_28) begin	// @[CSR.scala:461:19, :1152:18, :1379:72, :1391:44, :1392:24]
        reg_bp_0_control_dmode <= dMode;	// @[CSR.scala:461:19, :1399:38]
        reg_bp_0_control_action <= dMode & _GEN_20[0];	// @[CSR.scala:461:19, :1398:96, :1399:38, :1401:{51,71,120}, :1544:39]
        reg_bp_0_control_x <= _reg_bp_0_control_WIRE_1[2];	// @[CSR.scala:461:19, :1392:41, :1544:39]
        reg_bp_0_control_w <= _reg_bp_0_control_WIRE_1[1];	// @[CSR.scala:461:19, :1392:41, :1544:39]
        reg_bp_0_control_r <= _reg_bp_0_control_WIRE_1[0];	// @[CSR.scala:461:19, :1392:41, :1544:39]
      end
      if (csr_wen & (&_decoded_decoded_T_104))	// @[CSR.scala:971:20, :1152:18, :1214:{40,53}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mcause <= _reg_bp_0_control_WIRE_1 & 64'h800000000000000F;	// @[CSR.scala:475:27, :1214:62, :1544:39]
      else if (_GEN_24) begin	// @[CSR.scala:371:28, :971:20, :972:24]
      end
      else if (insn_call)	// @[CSR.scala:831:83]
        reg_mcause <= _GEN_9;	// @[CSR.scala:475:27, :896:8]
      else if (insn_break)	// @[CSR.scala:831:83]
        reg_mcause <= 64'h3;	// @[CSR.scala:475:27, :897:14]
      else	// @[CSR.scala:831:83]
        reg_mcause <= io_cause;	// @[CSR.scala:475:27]
      if (csr_wen & (&_decoded_decoded_T_36))	// @[CSR.scala:481:31, :1152:18, :1213:{40,52}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mtvec <= _reg_bp_0_control_WIRE_1[34:0];	// @[CSR.scala:481:31, :1213:52, :1544:39]
      if (_GEN_27)	// @[CSR.scala:539:21, :1152:18, :1281:38, :1284:67, :1285:27]
        reg_satp_mode <= {_reg_bp_0_control_WIRE_1[63], 3'h0};	// @[CSR.scala:376:44, :539:21, :1283:40, :1285:44, :1544:39]
      if (csr_wen & (&_decoded_decoded_T_40))	// @[CSR.scala:549:34, :1152:18, :1234:{47,67}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mcountinhibit <= _reg_bp_0_control_WIRE_1[2:0] & 3'h5;	// @[CSR.scala:549:34, :1234:76, :1544:39, Mux.scala:47:70]
      if (csr_wen & (&_decoded_decoded_T_128)) begin	// @[CSR.scala:1152:18, :1562:31, Cat.scala:33:92, Counters.scala:47:19, :67:11, package.scala:73:59, pla.scala:98:74]
        small_0 <= _reg_bp_0_control_WIRE_1[5:0];	// @[CSR.scala:1544:39, Counters.scala:45:41, :67:11]
        large_0 <= _reg_bp_0_control_WIRE_1[63:6];	// @[CSR.scala:1544:39, Counters.scala:50:31, :68:28]
      end
      else begin	// @[CSR.scala:1152:18, :1562:31, Counters.scala:47:19, :67:11]
        if (reg_mcountinhibit[2]) begin	// @[CSR.scala:549:34, :551:75]
        end
        else	// @[CSR.scala:551:75]
          small_0 <= nextSmall[5:0];	// @[Counters.scala:45:41, :46:33, :47:27]
        if (nextSmall[6] & ~(reg_mcountinhibit[2]))	// @[CSR.scala:549:34, :551:75, Counters.scala:46:33, :47:9, :51:{20,33}]
          large_0 <= large_0 + 58'h1;	// @[Counters.scala:50:31, :51:55]
      end
      if (csr_wen & (&_decoded_decoded_T_28) & (~(io_pc[1]) | _reg_bp_0_control_WIRE_1[2]))	// @[CSR.scala:608:25, :1152:18, :1185:36, :1189:{35,41,45,53,66}, :1191:20, :1544:39, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_misa <= ~(~_reg_bp_0_control_WIRE_1 | {60'h0, ~(_reg_bp_0_control_WIRE_1[5]), 3'h0}) & 64'h102D | reg_misa & 64'hFFFFFFFFFFFFEFD2;	// @[CSR.scala:376:44, :608:25, :896:8, :1187:20, :1191:{23,25,32,35,55,62,73,75}, :1544:39]
      if (csr_wen & (&_decoded_decoded_T_124))	// @[CSR.scala:751:43, :1152:18, :1426:35, :1427:13, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_custom_0 <= _reg_bp_0_control_WIRE_1 & 64'h208 | reg_custom_0 & 64'hFFFFFFFFFFFFFDF7;	// @[CSR.scala:751:43, :1427:{23,31,38,40}, :1544:39]
      io_status_cease_r <= system_insn & (&{io_rw_addr[2], _GEN_3[3], _GEN_3[4], _GEN_3[5], _GEN_3[6], _GEN_3[7], io_rw_addr[8], io_rw_addr[9], _GEN_3[10], _GEN_3[11]}) | io_status_cease_r;	// @[CSR.scala:814:31, :831:83, Cat.scala:33:92, Reg.scala:35:20, :36:{18,22}, pla.scala:78:21, :90:45, :91:29, :98:74]
    end
    if (csr_wen & (&_decoded_decoded_T_120))	// @[CSR.scala:971:20, :1152:18, :1258:{42,52}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_dpc <= ~_GEN_26;	// @[CSR.scala:452:20, :1565:{26,31}]
    else if (_GEN_22)	// @[CSR.scala:451:26, :971:20, :972:24, :973:25, :975:19]
      reg_dpc <= ~_epc_T_1;	// @[CSR.scala:452:20, :1565:{26,31}]
    if (csr_wen & (&_decoded_decoded_T_122))	// @[CSR.scala:453:26, :1152:18, :1259:{43,59}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_dscratch0 <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:453:26, :1544:39]
    reg_singleStepped <= _io_singleStep_output & (io_retire | _io_trace_0_exception_output | reg_singleStepped);	// @[CSR.scala:455:30, :937:34, :956:43, :963:{36,56}, :964:{25,45}]
    reg_bp_0_control_chain <= ~(reset | _GEN_28) & reg_bp_0_control_chain;	// @[CSR.scala:461:19, :1152:18, :1379:72, :1391:44, :1392:24, :1402:30, :1501:25, :1504:17]
    if (_GEN_28) begin	// @[CSR.scala:461:19, :1152:18, :1379:72, :1391:44, :1392:24]
      reg_bp_0_control_tmatch <= _reg_bp_0_control_WIRE_1[8:7];	// @[CSR.scala:461:19, :1392:41, :1544:39]
      reg_bp_0_control_m <= _reg_bp_0_control_WIRE_1[6];	// @[CSR.scala:461:19, :1392:41, :1544:39]
      reg_bp_0_control_s <= _reg_bp_0_control_WIRE_1[4];	// @[CSR.scala:461:19, :1392:41, :1544:39]
      reg_bp_0_control_u <= _reg_bp_0_control_WIRE_1[3];	// @[CSR.scala:461:19, :1392:41, :1544:39]
    end
    if (csr_wen & _T_1612 & (&_decoded_decoded_T_114))	// @[CSR.scala:461:19, :1152:18, :1379:{57,72}, :1380:{44,57}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_bp_0_address <= _reg_bp_0_control_WIRE_1[38:0];	// @[CSR.scala:461:19, :1294:54, :1544:39]
    if (csr_wen) begin	// @[package.scala:73:59]
      if (&_decoded_decoded_T_8)	// @[Cat.scala:33:92, pla.scala:98:74]
        reg_mie <= reg_mie & ~sie_mask | _reg_bp_0_control_WIRE_1 & sie_mask;	// @[CSR.scala:464:20, :704:18, :1291:{64,66,77,86}, :1544:39]
      else if (&_decoded_decoded_T_34)	// @[Cat.scala:33:92, pla.scala:98:74]
        reg_mie <= _reg_bp_0_control_WIRE_1 & 64'h2AAA;	// @[CSR.scala:464:20, :1209:59, :1544:39]
      if (&_decoded_decoded_T_22)	// @[Cat.scala:33:92, pla.scala:98:74]
        reg_mip_ssip <= reg_mip_ssip & ~(reg_mideleg[1]) | _reg_bp_0_control_WIRE_1[1] & reg_mideleg[1];	// @[CSR.scala:466:18, :467:38, :473:20, :1278:{34,36,51,60}, :1544:39]
      else if (&_decoded_decoded_T_108)	// @[Cat.scala:33:92, pla.scala:98:74]
        reg_mip_ssip <= _GEN_25[0];	// @[CSR.scala:473:20, :1199:88, :1544:39]
      if (&_decoded_decoded_T_4)	// @[Cat.scala:33:92, pla.scala:98:74]
        reg_frm <= _reg_bp_0_control_WIRE_1[7:5];	// @[CSR.scala:543:20, :1245:{17,26}, :1544:39]
      else if (&_decoded_decoded_T_2)	// @[Cat.scala:33:92, pla.scala:98:74]
        reg_frm <= _reg_bp_0_control_WIRE_1[2:0];	// @[CSR.scala:543:20, :1544:39]
    end
    if (csr_wen & (&_decoded_decoded_T_32))	// @[CSR.scala:466:18, :1152:18, :1297:{42,56}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mideleg <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:466:18, :1544:39]
    if (csr_wen & (&_decoded_decoded_T_30))	// @[CSR.scala:470:18, :1152:18, :1298:{42,56}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_medeleg <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:470:18, :1544:39]
    if (csr_wen & (&_decoded_decoded_T_108)) begin	// @[CSR.scala:473:20, :1152:18, :1194:35, :1202:22, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mip_seip <= _GEN_25[8];	// @[CSR.scala:473:20, :1199:88, :1544:39]
      reg_mip_stip <= _GEN_25[4];	// @[CSR.scala:473:20, :1199:88, :1544:39]
    end
    if (csr_wen & (&_decoded_decoded_T_102))	// @[CSR.scala:971:20, :1152:18, :1210:{40,51}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mepc <= ~_GEN_26;	// @[CSR.scala:474:21, :1565:{26,31}]
    else if (_GEN_24) begin	// @[CSR.scala:371:28, :971:20, :972:24]
    end
    else	// @[CSR.scala:371:28, :971:20, :972:24]
      reg_mepc <= ~_epc_T_1;	// @[CSR.scala:474:21, :1565:{26,31}]
    if (csr_wen & (&_decoded_decoded_T_106))	// @[CSR.scala:971:20, :1152:18, :1215:{40,52}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mtval <= _reg_bp_0_control_WIRE_1[39:0];	// @[CSR.scala:476:22, :1544:39]
    else if (_GEN_24) begin	// @[CSR.scala:371:28, :971:20, :972:24]
    end
    else if (insn_break)	// @[CSR.scala:831:83]
      reg_mtval <= ~_epc_T_1;	// @[CSR.scala:476:22, :1565:{26,31}]
    else	// @[CSR.scala:831:83]
      reg_mtval <= io_tval;	// @[CSR.scala:476:22]
    if (csr_wen & (&_decoded_decoded_T_100))	// @[CSR.scala:478:25, :1152:18, :1211:{40,55}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mscratch <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:478:25, :1544:39]
    if (csr_wen & (&_decoded_decoded_T_38))	// @[CSR.scala:496:18, :1152:18, :1373:{44,61}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mcounteren <= _reg_bp_0_control_WIRE_1[31:0];	// @[CSR.scala:496:18, :1250:38, :1544:39]
    if (csr_wen & (&_decoded_decoded_T_12))	// @[CSR.scala:500:18, :1152:18, :1299:{44,61}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_scounteren <= _reg_bp_0_control_WIRE_1[31:0];	// @[CSR.scala:500:18, :1250:38, :1544:39]
    if (csr_wen & (&_decoded_decoded_T_16))	// @[CSR.scala:971:20, :1152:18, :1293:{42,53}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_sepc <= ~_GEN_26;	// @[CSR.scala:534:21, :1565:{26,31}]
    else if (_GEN_23) begin	// @[CSR.scala:534:21, :971:20, :972:24]
    end
    else	// @[CSR.scala:534:21, :971:20, :972:24]
      reg_sepc <= ~_epc_T_1;	// @[CSR.scala:534:21, :1565:{26,31}]
    if (csr_wen & (&_decoded_decoded_T_18))	// @[CSR.scala:971:20, :1152:18, :1295:{42,55}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_scause <= _reg_bp_0_control_WIRE_1 & 64'h800000000000001F;	// @[CSR.scala:535:23, :1295:64, :1544:39]
    else if (_GEN_23) begin	// @[CSR.scala:534:21, :971:20, :972:24]
    end
    else if (insn_call)	// @[CSR.scala:831:83]
      reg_scause <= _GEN_9;	// @[CSR.scala:535:23, :896:8]
    else if (insn_break)	// @[CSR.scala:831:83]
      reg_scause <= 64'h3;	// @[CSR.scala:535:23, :897:14]
    else	// @[CSR.scala:831:83]
      reg_scause <= io_cause;	// @[CSR.scala:535:23]
    if (csr_wen & (&_decoded_decoded_T_20))	// @[CSR.scala:971:20, :1152:18, :1296:{42,54}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_stval <= _reg_bp_0_control_WIRE_1[39:0];	// @[CSR.scala:536:22, :1544:39]
    else if (_GEN_23) begin	// @[CSR.scala:534:21, :971:20, :972:24]
    end
    else if (insn_break)	// @[CSR.scala:831:83]
      reg_stval <= ~_epc_T_1;	// @[CSR.scala:536:22, :1565:{26,31}]
    else	// @[CSR.scala:831:83]
      reg_stval <= io_tval;	// @[CSR.scala:536:22]
    if (csr_wen & (&_decoded_decoded_T_14))	// @[CSR.scala:537:25, :1152:18, :1292:{42,57}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_sscratch <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:537:25, :1544:39]
    if (csr_wen & (&_decoded_decoded_T_10))	// @[CSR.scala:538:22, :1152:18, :1294:{42,54}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_stvec <= _reg_bp_0_control_WIRE_1[38:0];	// @[CSR.scala:538:22, :1294:54, :1544:39]
    if (_GEN_27)	// @[CSR.scala:539:21, :1152:18, :1281:38, :1284:67, :1285:27]
      reg_satp_ppn <= {21'h0, _reg_bp_0_control_WIRE_1[22:0]};	// @[CSR.scala:539:21, :1286:{26,41}, :1544:39]
    if (csr_wen & ((&_decoded_decoded_T_4) | (&_decoded_decoded_T)))	// @[CSR.scala:1138:30, :1152:18, :1240:40, :1242:38, :1244:20, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_fflags <= _reg_bp_0_control_WIRE_1[4:0];	// @[CSR.scala:542:23, :1240:77, :1544:39]
    else	// @[CSR.scala:1138:30, :1152:18, :1242:38]
      reg_fflags <= {5{io_fcsr_flags_valid}} & io_fcsr_flags_bits | reg_fflags;	// @[CSR.scala:542:23, :1138:30, :1139:16]
  end // always @(posedge)
  wire [6:0]  nextSmall_1 = {1'h0, small_1} + {6'h0, ~_io_csr_stall_output};	// @[CSR.scala:553:56, :1095:27, Counters.scala:45:41, :46:33]
  always @(posedge io_ungated_clock) begin
    if (reset) begin
      reg_wfi <= 1'h0;	// @[CSR.scala:540:54]
      small_1 <= 6'h0;	// @[Counters.scala:45:41]
      large_1 <= 58'h0;	// @[Counters.scala:50:31]
    end
    else begin
      reg_wfi <= ~((|{_GEN[11], _GEN[9], _GEN[7], _GEN[5], _GEN[3], _GEN[1]}) | io_interrupts_debug | _io_trace_0_exception_output) & (system_insn & (&{io_rw_addr[2], _GEN_3[3], _GEN_3[4], _GEN_3[5], _GEN_3[6], _GEN_3[7], io_rw_addr[8], _GEN_3[9], _GEN_3[10], _GEN_3[11]}) & ~_io_singleStep_output & ~reg_debug | reg_wfi);	// @[CSR.scala:451:26, :540:54, :573:56, :585:36, :814:31, :864:45, :937:34, :956:43, :959:{36,51,61}, :960:{28,55,69,79}, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
      if (csr_wen & (&_decoded_decoded_T_126)) begin	// @[CSR.scala:1152:18, :1562:31, Cat.scala:33:92, Counters.scala:47:19, :67:11, package.scala:73:59, pla.scala:98:74]
        small_1 <= _reg_bp_0_control_WIRE_1[5:0];	// @[CSR.scala:1544:39, Counters.scala:45:41, :67:11]
        large_1 <= _reg_bp_0_control_WIRE_1[63:6];	// @[CSR.scala:1544:39, Counters.scala:50:31, :68:28]
      end
      else begin	// @[CSR.scala:1152:18, :1562:31, Counters.scala:47:19, :67:11]
        if (reg_mcountinhibit[0]) begin	// @[CSR.scala:549:34, :550:40]
        end
        else	// @[CSR.scala:550:40]
          small_1 <= nextSmall_1[5:0];	// @[Counters.scala:45:41, :46:33, :47:27]
        if (nextSmall_1[6] & ~(reg_mcountinhibit[0]))	// @[CSR.scala:549:34, :550:40, Counters.scala:46:33, :47:9, :51:{20,33}]
          large_1 <= large_1 + 58'h1;	// @[Counters.scala:50:31, :51:55]
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    wire  [2:0]  _T_234 = {1'h0, {1'h0, insn_ret} + {1'h0, insn_call}} + {1'h0, {1'h0, insn_break} + {1'h0, io_exception}};	// @[Bitwise.scala:51:90, CSR.scala:831:83]
    always @(posedge clock) begin	// @[CSR.scala:957:9]
      if (~reset & (|(_T_234[2:1]))) begin	// @[Bitwise.scala:51:90, CSR.scala:957:{9,79}]
        if (`ASSERT_VERBOSE_COND_)	// @[CSR.scala:957:9]
          $error("Assertion failed: these conditions must be mutually exclusive\n    at CSR.scala:957 assert(PopCount(insn_ret :: insn_call :: insn_break :: io.exception :: Nil) <= 1.U, \"these conditions must be mutually exclusive\")\n");	// @[CSR.scala:957:9]
        if (`STOP_COND_)	// @[CSR.scala:957:9]
          $fatal;	// @[CSR.scala:957:9]
      end
      if (~reset & ~(~reg_singleStepped | ~io_retire)) begin	// @[CSR.scala:455:30, :966:{9,10,29,42}]
        if (`ASSERT_VERBOSE_COND_)	// @[CSR.scala:966:9]
          $error("Assertion failed\n    at CSR.scala:966 assert(!reg_singleStepped || io.retire === 0.U)\n");	// @[CSR.scala:966:9]
        if (`STOP_COND_)	// @[CSR.scala:966:9]
          $fatal;	// @[CSR.scala:966:9]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    logic [31:0] _RANDOM_51;
    logic [31:0] _RANDOM_52;
    logic [31:0] _RANDOM_53;
    logic [31:0] _RANDOM_54;
    logic [31:0] _RANDOM_55;
    logic [31:0] _RANDOM_56;
    logic [31:0] _RANDOM_57;
    logic [31:0] _RANDOM_58;
    logic [31:0] _RANDOM_59;
    logic [31:0] _RANDOM_60;
    logic [31:0] _RANDOM_61;
    logic [31:0] _RANDOM_62;
    logic [31:0] _RANDOM_63;
    logic [31:0] _RANDOM_64;
    logic [31:0] _RANDOM_65;
    logic [31:0] _RANDOM_66;
    logic [31:0] _RANDOM_67;
    logic [31:0] _RANDOM_68;
    logic [31:0] _RANDOM_69;
    logic [31:0] _RANDOM_70;
    logic [31:0] _RANDOM_71;
    logic [31:0] _RANDOM_72;
    logic [31:0] _RANDOM_73;
    logic [31:0] _RANDOM_74;
    logic [31:0] _RANDOM_75;
    logic [31:0] _RANDOM_76;
    logic [31:0] _RANDOM_77;
    logic [31:0] _RANDOM_78;
    logic [31:0] _RANDOM_79;
    logic [31:0] _RANDOM_80;
    logic [31:0] _RANDOM_81;
    logic [31:0] _RANDOM_82;
    logic [31:0] _RANDOM_83;
    logic [31:0] _RANDOM_84;
    logic [31:0] _RANDOM_85;
    logic [31:0] _RANDOM_86;
    logic [31:0] _RANDOM_87;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        _RANDOM_51 = `RANDOM;
        _RANDOM_52 = `RANDOM;
        _RANDOM_53 = `RANDOM;
        _RANDOM_54 = `RANDOM;
        _RANDOM_55 = `RANDOM;
        _RANDOM_56 = `RANDOM;
        _RANDOM_57 = `RANDOM;
        _RANDOM_58 = `RANDOM;
        _RANDOM_59 = `RANDOM;
        _RANDOM_60 = `RANDOM;
        _RANDOM_61 = `RANDOM;
        _RANDOM_62 = `RANDOM;
        _RANDOM_63 = `RANDOM;
        _RANDOM_64 = `RANDOM;
        _RANDOM_65 = `RANDOM;
        _RANDOM_66 = `RANDOM;
        _RANDOM_67 = `RANDOM;
        _RANDOM_68 = `RANDOM;
        _RANDOM_69 = `RANDOM;
        _RANDOM_70 = `RANDOM;
        _RANDOM_71 = `RANDOM;
        _RANDOM_72 = `RANDOM;
        _RANDOM_73 = `RANDOM;
        _RANDOM_74 = `RANDOM;
        _RANDOM_75 = `RANDOM;
        _RANDOM_76 = `RANDOM;
        _RANDOM_77 = `RANDOM;
        _RANDOM_78 = `RANDOM;
        _RANDOM_79 = `RANDOM;
        _RANDOM_80 = `RANDOM;
        _RANDOM_81 = `RANDOM;
        _RANDOM_82 = `RANDOM;
        _RANDOM_83 = `RANDOM;
        _RANDOM_84 = `RANDOM;
        _RANDOM_85 = `RANDOM;
        _RANDOM_86 = `RANDOM;
        _RANDOM_87 = `RANDOM;
        reg_mstatus_prv = _RANDOM_1[7:6];	// @[CSR.scala:371:28]
        reg_mstatus_gva = _RANDOM_2[2];	// @[CSR.scala:371:28]
        reg_mstatus_tsr = _RANDOM_2[18];	// @[CSR.scala:371:28]
        reg_mstatus_tw = _RANDOM_2[19];	// @[CSR.scala:371:28]
        reg_mstatus_tvm = _RANDOM_2[20];	// @[CSR.scala:371:28]
        reg_mstatus_mxr = _RANDOM_2[21];	// @[CSR.scala:371:28]
        reg_mstatus_sum = _RANDOM_2[22];	// @[CSR.scala:371:28]
        reg_mstatus_mprv = _RANDOM_2[23];	// @[CSR.scala:371:28]
        reg_mstatus_fs = _RANDOM_2[27:26];	// @[CSR.scala:371:28]
        reg_mstatus_mpp = _RANDOM_2[29:28];	// @[CSR.scala:371:28]
        reg_mstatus_spp = _RANDOM_3[0];	// @[CSR.scala:371:28]
        reg_mstatus_mpie = _RANDOM_3[1];	// @[CSR.scala:371:28]
        reg_mstatus_spie = _RANDOM_3[3];	// @[CSR.scala:371:28]
        reg_mstatus_mie = _RANDOM_3[5];	// @[CSR.scala:371:28]
        reg_mstatus_sie = _RANDOM_3[7];	// @[CSR.scala:371:28]
        reg_dcsr_ebreakm = _RANDOM_3[25];	// @[CSR.scala:371:28, :379:25]
        reg_dcsr_ebreaks = _RANDOM_3[27];	// @[CSR.scala:371:28, :379:25]
        reg_dcsr_ebreaku = _RANDOM_3[28];	// @[CSR.scala:371:28, :379:25]
        reg_dcsr_cause = _RANDOM_4[2:0];	// @[CSR.scala:379:25]
        reg_dcsr_step = _RANDOM_4[6];	// @[CSR.scala:379:25]
        reg_dcsr_prv = _RANDOM_4[8:7];	// @[CSR.scala:379:25]
        reg_debug = _RANDOM_4[9];	// @[CSR.scala:379:25, :451:26]
        reg_dpc = {_RANDOM_4[31:10], _RANDOM_5[17:0]};	// @[CSR.scala:379:25, :452:20]
        reg_dscratch0 = {_RANDOM_5[31:18], _RANDOM_6, _RANDOM_7[17:0]};	// @[CSR.scala:452:20, :453:26]
        reg_singleStepped = _RANDOM_7[18];	// @[CSR.scala:453:26, :455:30]
        reg_bp_0_control_dmode = _RANDOM_7[24];	// @[CSR.scala:453:26, :461:19]
        reg_bp_0_control_action = _RANDOM_9[7];	// @[CSR.scala:461:19]
        reg_bp_0_control_chain = _RANDOM_9[8];	// @[CSR.scala:461:19]
        reg_bp_0_control_tmatch = _RANDOM_9[12:11];	// @[CSR.scala:461:19]
        reg_bp_0_control_m = _RANDOM_9[13];	// @[CSR.scala:461:19]
        reg_bp_0_control_s = _RANDOM_9[15];	// @[CSR.scala:461:19]
        reg_bp_0_control_u = _RANDOM_9[16];	// @[CSR.scala:461:19]
        reg_bp_0_control_x = _RANDOM_9[17];	// @[CSR.scala:461:19]
        reg_bp_0_control_w = _RANDOM_9[18];	// @[CSR.scala:461:19]
        reg_bp_0_control_r = _RANDOM_9[19];	// @[CSR.scala:461:19]
        reg_bp_0_address = {_RANDOM_9[31:20], _RANDOM_10[26:0]};	// @[CSR.scala:461:19]
        reg_mie = {_RANDOM_17[31:8], _RANDOM_18, _RANDOM_19[7:0]};	// @[CSR.scala:464:20]
        reg_mideleg = {_RANDOM_19[31:8], _RANDOM_20, _RANDOM_21[7:0]};	// @[CSR.scala:464:20, :466:18]
        reg_medeleg = {_RANDOM_21[31:8], _RANDOM_22, _RANDOM_23[7:0]};	// @[CSR.scala:466:18, :470:18]
        reg_mip_seip = _RANDOM_23[14];	// @[CSR.scala:470:18, :473:20]
        reg_mip_stip = _RANDOM_23[18];	// @[CSR.scala:470:18, :473:20]
        reg_mip_ssip = _RANDOM_23[22];	// @[CSR.scala:470:18, :473:20]
        reg_mepc = {_RANDOM_23[31:24], _RANDOM_24};	// @[CSR.scala:470:18, :474:21]
        reg_mcause = {_RANDOM_25, _RANDOM_26};	// @[CSR.scala:475:27]
        reg_mtval = {_RANDOM_27, _RANDOM_28[7:0]};	// @[CSR.scala:476:22]
        reg_mscratch = {_RANDOM_29[31:16], _RANDOM_30, _RANDOM_31[15:0]};	// @[CSR.scala:478:25]
        reg_mtvec = {_RANDOM_31[31:16], _RANDOM_32[18:0]};	// @[CSR.scala:478:25, :481:31]
        reg_mcounteren = {_RANDOM_38[31:9], _RANDOM_39[8:0]};	// @[CSR.scala:496:18]
        reg_scounteren = {_RANDOM_39[31:9], _RANDOM_40[8:0]};	// @[CSR.scala:496:18, :500:18]
        reg_sepc = {_RANDOM_63[31:18], _RANDOM_64[25:0]};	// @[CSR.scala:534:21]
        reg_scause = {_RANDOM_64[31:26], _RANDOM_65, _RANDOM_66[25:0]};	// @[CSR.scala:534:21, :535:23]
        reg_stval = {_RANDOM_66[31:26], _RANDOM_67, _RANDOM_68[1:0]};	// @[CSR.scala:535:23, :536:22]
        reg_sscratch = {_RANDOM_68[31:2], _RANDOM_69, _RANDOM_70[1:0]};	// @[CSR.scala:536:22, :537:25]
        reg_stvec = {_RANDOM_70[31:2], _RANDOM_71[8:0]};	// @[CSR.scala:537:25, :538:22]
        reg_satp_mode = _RANDOM_71[12:9];	// @[CSR.scala:538:22, :539:21]
        reg_satp_ppn = {_RANDOM_71[31:29], _RANDOM_72, _RANDOM_73[8:0]};	// @[CSR.scala:538:22, :539:21]
        reg_wfi = _RANDOM_73[9];	// @[CSR.scala:539:21, :540:54]
        reg_fflags = _RANDOM_73[14:10];	// @[CSR.scala:539:21, :542:23]
        reg_frm = _RANDOM_73[17:15];	// @[CSR.scala:539:21, :543:20]
        reg_mcountinhibit = _RANDOM_73[20:18];	// @[CSR.scala:539:21, :549:34]
        small_0 = _RANDOM_73[26:21];	// @[CSR.scala:539:21, Counters.scala:45:41]
        large_0 = {_RANDOM_73[31:27], _RANDOM_74, _RANDOM_75[20:0]};	// @[CSR.scala:539:21, Counters.scala:50:31]
        small_1 = _RANDOM_75[26:21];	// @[Counters.scala:45:41, :50:31]
        large_1 = {_RANDOM_75[31:27], _RANDOM_76, _RANDOM_77[20:0]};	// @[Counters.scala:50:31]
        reg_misa = {_RANDOM_77[31:21], _RANDOM_78, _RANDOM_79[20:0]};	// @[CSR.scala:608:25, Counters.scala:50:31]
        reg_custom_0 = {_RANDOM_79[31:21], _RANDOM_80, _RANDOM_81[20:0]};	// @[CSR.scala:608:25, :751:43]
        io_status_cease_r = _RANDOM_87[21];	// @[Reg.scala:35:20]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_rw_rdata = _io_rw_rdata_WIRE;	// @[Mux.scala:27:73]
  assign io_decode_0_fp_illegal = _io_decode_0_fp_illegal_output;	// @[CSR.scala:853:91]
  assign io_decode_0_fp_csr = &_io_decode_0_fp_csr_T;	// @[Cat.scala:33:92, pla.scala:98:74]
  assign io_decode_0_rocc_illegal = ~(reg_misa[23]);	// @[CSR.scala:608:25, :856:{96,105}]
  assign io_decode_0_read_illegal = _io_decode_0_system_illegal_T | ~csr_exists | (_io_decode_0_virtual_access_illegal_T_24 | io_decode_0_inst[31:20] == 12'h680) & ~allow_sfence_vma | (io_decode_0_inst[31:20] > 12'hBFF & io_decode_0_inst[31:20] < 12'hC20 | io_decode_0_inst[31:20] > 12'hC7F & io_decode_0_inst[31:20] < 12'hCA0) & ~((reg_mstatus_prv[1] | _io_decode_0_virtual_access_illegal_T_3[0]) & ((|reg_mstatus_prv) | _io_decode_0_virtual_access_illegal_T_11[0])) | (&{io_decode_0_inst[24], io_decode_0_inst[25], _GEN_7[0], io_decode_0_inst[27], io_decode_0_inst[28], io_decode_0_inst[29], io_decode_0_inst[30], _GEN_7[5]}) & ~reg_debug | (&_io_decode_0_fp_csr_T) & _io_decode_0_fp_illegal_output;	// @[CSR.scala:371:28, :451:26, :835:27, :837:{93,111}, :842:81, :844:61, :845:70, :846:88, :850:{52,70,86}, :851:{57,75}, :853:91, :857:42, :861:7, :862:{30,38,56,59}, :863:{18,21}, :864:{42,45}, :865:68, :866:21, Cat.scala:33:92, package.scala:205:{47,55,60}, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign io_decode_0_write_illegal = &(io_decode_0_inst[31:30]);	// @[CSR.scala:835:27, :867:{33,41}]
  assign io_decode_0_write_flush = ~(io_decode_0_write_flush_addr_m > 12'h33F & io_decode_0_write_flush_addr_m < 12'h344);	// @[CSR.scala:837:93, :869:25, :870:{7,16,35,45}]
  assign io_decode_0_system_illegal = _io_decode_0_system_illegal_T | (&{io_decode_0_inst[22], _GEN_4[21], _GEN_4[22], _GEN_4[23], _GEN_4[24], _GEN_4[25], io_decode_0_inst[28], _GEN_4[27], _GEN_4[28], _GEN_4[29]}) & ~(reg_mstatus_prv[1] | ~reg_mstatus_tw) | (|_decoded_orMatrixOutputs_T_10) & ~(reg_mstatus_prv[1] | ~reg_mstatus_tsr) | (|_decoded_orMatrixOutputs_T_10) & io_decode_0_inst[30] & io_decode_0_inst[27] & ~reg_debug | (&{io_decode_0_inst[0], io_decode_0_inst[1], _GEN_4[0], _GEN_4[1], io_decode_0_inst[4], io_decode_0_inst[5], io_decode_0_inst[6], _GEN_4[5], _GEN_4[6], _GEN_4[7], io_decode_0_inst[25], _GEN_4[24], _GEN_4[25], io_decode_0_inst[28], _GEN_4[27], _GEN_4[28], _GEN_4[29]}) & ~allow_sfence_vma;	// @[CSR.scala:371:28, :451:26, :835:27, :844:{61,71,74}, :845:70, :848:{72,75}, :857:42, :862:59, :864:45, :873:{14,17}, :874:{14,17}, :875:{21,33,37,51}, :876:37, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_csr_stall = _io_csr_stall_output;	// @[CSR.scala:1095:27]
  assign io_eret = _exception_T | insn_ret;	// @[CSR.scala:831:83, :936:{24,38}]
  assign io_singleStep = _io_singleStep_output;	// @[CSR.scala:937:34]
  assign io_status_debug = reg_debug;	// @[CSR.scala:451:26]
  assign io_status_cease = io_status_cease_r;	// @[Reg.scala:35:20]
  assign io_status_wfi = reg_wfi;	// @[CSR.scala:540:54]
  assign io_status_isa = reg_misa[31:0];	// @[CSR.scala:608:25, :941:17]
  assign io_status_dprv = reg_mstatus_mprv & ~reg_debug ? reg_mstatus_mpp : reg_mstatus_prv;	// @[CSR.scala:371:28, :451:26, :864:45, :944:{24,42}]
  assign io_status_prv = reg_mstatus_prv;	// @[CSR.scala:371:28]
  assign io_status_gva = reg_mstatus_gva;	// @[CSR.scala:371:28]
  assign io_status_tsr = reg_mstatus_tsr;	// @[CSR.scala:371:28]
  assign io_status_tw = reg_mstatus_tw;	// @[CSR.scala:371:28]
  assign io_status_tvm = reg_mstatus_tvm;	// @[CSR.scala:371:28]
  assign io_status_mxr = reg_mstatus_mxr;	// @[CSR.scala:371:28]
  assign io_status_sum = reg_mstatus_sum;	// @[CSR.scala:371:28]
  assign io_status_mprv = reg_mstatus_mprv;	// @[CSR.scala:371:28]
  assign io_status_fs = reg_mstatus_fs;	// @[CSR.scala:371:28]
  assign io_status_mpp = reg_mstatus_mpp;	// @[CSR.scala:371:28]
  assign io_status_spp = reg_mstatus_spp;	// @[CSR.scala:371:28]
  assign io_status_mpie = reg_mstatus_mpie;	// @[CSR.scala:371:28]
  assign io_status_spie = reg_mstatus_spie;	// @[CSR.scala:371:28]
  assign io_status_mie = reg_mstatus_mie;	// @[CSR.scala:371:28]
  assign io_status_sie = reg_mstatus_sie;	// @[CSR.scala:371:28]
  assign io_ptbr_mode = reg_satp_mode;	// @[CSR.scala:539:21]
  assign io_ptbr_ppn = reg_satp_ppn;	// @[CSR.scala:539:21]
  assign io_evec = insn_ret ? (io_rw_addr[9] ? (_T_391 ? ~(~reg_dpc | _GEN_2) : ~(~reg_mepc | _GEN_2)) : ~(~reg_sepc | _GEN_2)) : trapToDebug ? {28'h0, reg_debug ? {8'h80, ~insn_break, 3'h0} : 12'h800} : {_GEN_11[0] & cause[63] & cause[7:6] == 2'h0 ? {_GEN_11[39:8], cause[5:0]} : _GEN_11[39:2], 2'h0};	// @[CSR.scala:376:44, :451:26, :452:20, :474:21, :534:21, :831:83, :896:8, :898:25, :899:30, :902:119, :905:{22,37}, :914:19, :915:32, :917:{24,55,70,94}, :918:{8,38}, :931:17, :932:11, :1049:19, :1051:{43,48}, :1052:29, :1068:{48,66}, :1072:15, :1073:65, :1566:{26,28,31}, Cat.scala:33:92]
  assign io_time = value_1;	// @[Cat.scala:33:92]
  assign io_fcsr_rm = reg_frm;	// @[CSR.scala:543:20]
  assign io_interrupt = ((io_interrupts_debug | _GEN_0[15] | _GEN_0[14] | _GEN_0[13] | _GEN_0[12] | _GEN_0[11] | _GEN_0[3] | _GEN_0[7] | _GEN_0[9] | _GEN_0[1] | _GEN_0[5] | _GEN_0[10] | _GEN_0[2] | _GEN_0[6] | _GEN_0[8] | _GEN_0[0] | _GEN_0[4] | _GEN_1[10] | _GEN_1[2] | _GEN_1[6] | _GEN_1[8] | _GEN_1[0] | _GEN_1[4]) & ~_io_singleStep_output | reg_singleStepped) & ~(reg_debug | io_status_cease_r);	// @[CSR.scala:451:26, :455:30, :579:25, :580:25, :585:{33,36,51,73,76,88}, :937:34, :1538:{76,90}, Reg.scala:35:20]
  assign io_interrupt_cause = {60'h0, io_interrupts_debug ? 4'hE : _GEN_0[15] ? 4'hF : _GEN_0[14] ? 4'hE : _GEN_0[13] ? 4'hD : _GEN_0[12] ? 4'hC : _GEN_0[11] ? 4'hB : _GEN_0[3] ? 4'h3 : _GEN_0[7] ? 4'h7 : _GEN_0[9] ? 4'h9 : _GEN_0[1] ? 4'h1 : _GEN_0[5] ? 4'h5 : _GEN_0[10] ? 4'hA : _GEN_0[2] ? 4'h2 : _GEN_0[6] ? 4'h6 : _GEN_0[8] ? 4'h8 : _GEN_0[0] ? 4'h0 : _GEN_0[4] ? 4'h4 : _GEN_1[10] ? 4'hB : _GEN_1[2] ? 4'h3 : _GEN_1[6] ? 4'h7 : _GEN_1[8] ? 4'h9 : _GEN_1[0] ? 4'h1 : {3'h2, _GEN_1[4]}} - 64'h8000000000000000;	// @[CSR.scala:407:50, :579:25, :580:25, :584:63, :630:27, :896:8, :1538:76, Mux.scala:47:70]
  assign io_bp_0_control_action = reg_bp_0_control_action;	// @[CSR.scala:461:19]
  assign io_bp_0_control_chain = reg_bp_0_control_chain;	// @[CSR.scala:461:19]
  assign io_bp_0_control_tmatch = reg_bp_0_control_tmatch;	// @[CSR.scala:461:19]
  assign io_bp_0_control_m = reg_bp_0_control_m;	// @[CSR.scala:461:19]
  assign io_bp_0_control_s = reg_bp_0_control_s;	// @[CSR.scala:461:19]
  assign io_bp_0_control_u = reg_bp_0_control_u;	// @[CSR.scala:461:19]
  assign io_bp_0_control_x = reg_bp_0_control_x;	// @[CSR.scala:461:19]
  assign io_bp_0_control_w = reg_bp_0_control_w;	// @[CSR.scala:461:19]
  assign io_bp_0_control_r = reg_bp_0_control_r;	// @[CSR.scala:461:19]
  assign io_bp_0_address = reg_bp_0_address;	// @[CSR.scala:461:19]
  assign io_inhibit_cycle = reg_mcountinhibit[0];	// @[CSR.scala:549:34, :550:40]
  assign io_trace_0_valid = io_retire | _io_trace_0_exception_output;	// @[CSR.scala:956:43, :1523:32]
  assign io_trace_0_iaddr = io_pc;
  assign io_trace_0_insn = io_inst_0;
  assign io_trace_0_exception = _io_trace_0_exception_output;	// @[CSR.scala:956:43]
  assign io_customCSRs_0_value = reg_custom_0;	// @[CSR.scala:751:43]
endmodule

