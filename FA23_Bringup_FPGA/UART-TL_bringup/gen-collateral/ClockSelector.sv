// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module ClockSelector(
  input         auto_clock_in_1_clock,
                auto_clock_in_0_clock,
                auto_clock_in_0_reset,
                auto_tl_in_a_valid,
  input  [2:0]  auto_tl_in_a_bits_opcode,
                auto_tl_in_a_bits_param,
  input  [1:0]  auto_tl_in_a_bits_size,
  input  [8:0]  auto_tl_in_a_bits_source,
  input  [20:0] auto_tl_in_a_bits_address,
  input  [7:0]  auto_tl_in_a_bits_mask,
  input  [63:0] auto_tl_in_a_bits_data,
  input         auto_tl_in_a_bits_corrupt,
                auto_tl_in_d_ready,
  output        auto_clock_out_member_allClocks_tileClockGroup_tile_1_clock,
                auto_clock_out_member_allClocks_tileClockGroup_tile_1_reset,
                auto_clock_out_member_allClocks_tileClockGroup_tile_0_clock,
                auto_clock_out_member_allClocks_tileClockGroup_tile_0_reset,
                auto_clock_out_member_allClocks_uncore_clock,
                auto_clock_out_member_allClocks_uncore_reset,
                auto_clock_out_member_allClocks_fbus_clock,
                auto_clock_out_member_allClocks_fbus_reset,
                auto_tl_in_a_ready,
                auto_tl_in_d_valid,
  output [2:0]  auto_tl_in_d_bits_opcode,
  output [1:0]  auto_tl_in_d_bits_size,
  output [8:0]  auto_tl_in_d_bits_source,
  output [63:0] auto_tl_in_d_bits_data,
  output        io_clk_debug
);

  wire        out_woready_3;	// @[RegisterRouter.scala:82:24]
  wire        out_woready_1;	// @[RegisterRouter.scala:82:24]
  wire        _clk_temp_divider_io_clockOut;	// @[ClockSelector.scala:85:33]
  wire [11:0] _debug_div_io_q;	// @[ClockSelector.scala:79:55]
  wire        _debug_mux_io_clockOut;	// @[ClockUtil.scala:126:25]
  wire [1:0]  _debug_sel_io_q;	// @[ClockSelector.scala:77:55]
  wire        _debug_en_io_q;	// @[ClockSelector.scala:76:55]
  wire        _x1_member_allClocks_tileClockGroup_tile_1_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  wire [7:0]  _x1_member_allClocks_tileClockGroup_tile_1_reset_count_io_q;	// @[ClockSelector.scala:21:25]
  wire        _x1_member_allClocks_tileClockGroup_tile_0_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  wire [7:0]  _x1_member_allClocks_tileClockGroup_tile_0_reset_count_io_q;	// @[ClockSelector.scala:21:25]
  wire        _x1_member_allClocks_uncore_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  wire [7:0]  _x1_member_allClocks_uncore_reset_count_io_q;	// @[ClockSelector.scala:21:25]
  wire        _x1_member_allClocks_fbus_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  wire [7:0]  _x1_member_allClocks_fbus_reset_count_io_q;	// @[ClockSelector.scala:21:25]
  wire        _mux_io_clockOut;	// @[ClockUtil.scala:126:25]
  wire [1:0]  _sel_io_q;	// @[ClockSelector.scala:60:49]
  wire        out_front_bits_read = auto_tl_in_a_bits_opcode == 3'h4;	// @[RegisterRouter.scala:71:36]
  wire        _out_out_bits_data_WIRE_1 = auto_tl_in_a_bits_address[11:4] == 8'h0;	// @[Bitwise.scala:77:12, Edges.scala:191:34, RegisterRouter.scala:72:19, :82:24]
  wire        _out_wofireMux_T_2 = auto_tl_in_a_valid & auto_tl_in_d_ready & ~out_front_bits_read;	// @[RegisterRouter.scala:71:36, :82:24]
  assign out_woready_1 = _out_wofireMux_T_2 & ~(auto_tl_in_a_bits_address[3]) & _out_out_bits_data_WIRE_1;	// @[RegisterRouter.scala:82:24]
  assign out_woready_3 = _out_wofireMux_T_2 & auto_tl_in_a_bits_address[3] & _out_out_bits_data_WIRE_1;	// @[RegisterRouter.scala:82:24]
  wire [2:0]  bundleIn_0_d_bits_opcode = {2'h0, out_front_bits_read};	// @[RegisterRouter.scala:71:36, :97:19]
  TLMonitor_95 monitor (	// @[Nodes.scala:24:25]
    .io_in_a_ready        (auto_tl_in_d_ready),
    .io_in_a_valid        (auto_tl_in_a_valid),
    .io_in_a_bits_opcode  (auto_tl_in_a_bits_opcode),
    .io_in_a_bits_param   (auto_tl_in_a_bits_param),
    .io_in_a_bits_size    (auto_tl_in_a_bits_size),
    .io_in_a_bits_source  (auto_tl_in_a_bits_source),
    .io_in_a_bits_address (auto_tl_in_a_bits_address),
    .io_in_a_bits_mask    (auto_tl_in_a_bits_mask),
    .io_in_a_bits_corrupt (auto_tl_in_a_bits_corrupt),
    .io_in_d_ready        (auto_tl_in_d_ready),
    .io_in_d_valid        (auto_tl_in_a_valid),
    .io_in_d_bits_opcode  (bundleIn_0_d_bits_opcode),	// @[RegisterRouter.scala:97:19]
    .io_in_d_bits_size    (auto_tl_in_a_bits_size),
    .io_in_d_bits_source  (auto_tl_in_a_bits_source)
  );
  AsyncResetRegVec_w2_i0_2 sel (	// @[ClockSelector.scala:60:49]
    .reset (auto_clock_in_0_reset),
    .io_d  (auto_tl_in_a_bits_data[1:0]),	// @[RegisterRouter.scala:82:24]
    .io_en (out_woready_1 & auto_tl_in_a_bits_mask[0]),	// @[Bitwise.scala:28:17, RegisterRouter.scala:82:24]
    .io_q  (_sel_io_q)
  );
  ClockMutexMux mux (	// @[ClockUtil.scala:126:25]
    .io_clocksIn_0 (auto_clock_in_0_clock),
    .io_clocksIn_1 (auto_clock_in_1_clock),
    .io_resetAsync (auto_clock_in_0_reset),
    .io_sel        (_sel_io_q[0]),	// @[ClockSelector.scala:60:49, :63:27]
    .io_clockOut   (_mux_io_clockOut)
  );
  AsyncResetRegVec_w8_i0 x1_member_allClocks_fbus_reset_count (	// @[ClockSelector.scala:21:25]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_fbus_reset_count_io_q + 8'h1),	// @[ClockSelector.scala:21:25, :24:32]
    .io_en (_x1_member_allClocks_fbus_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_fbus_reset_count_io_q)
  );
  AsyncResetRegVec_w1_i1 x1_member_allClocks_fbus_reset_resetout (	// @[ClockSelector.scala:22:28]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_fbus_reset_count_io_q < 8'hC7),	// @[ClockSelector.scala:21:25, :26:35]
    .io_en (_x1_member_allClocks_fbus_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_fbus_reset_resetout_io_q)
  );
  AsyncResetRegVec_w8_i0 x1_member_allClocks_uncore_reset_count (	// @[ClockSelector.scala:21:25]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_uncore_reset_count_io_q + 8'h1),	// @[ClockSelector.scala:21:25, :24:32]
    .io_en (_x1_member_allClocks_uncore_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_uncore_reset_count_io_q)
  );
  AsyncResetRegVec_w1_i1 x1_member_allClocks_uncore_reset_resetout (	// @[ClockSelector.scala:22:28]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_uncore_reset_count_io_q < 8'hC7),	// @[ClockSelector.scala:21:25, :26:35]
    .io_en (_x1_member_allClocks_uncore_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_uncore_reset_resetout_io_q)
  );
  AsyncResetRegVec_w8_i0 x1_member_allClocks_tileClockGroup_tile_0_reset_count (	// @[ClockSelector.scala:21:25]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_tileClockGroup_tile_0_reset_count_io_q + 8'h1),	// @[ClockSelector.scala:21:25, :24:32]
    .io_en (_x1_member_allClocks_tileClockGroup_tile_0_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_tileClockGroup_tile_0_reset_count_io_q)
  );
  AsyncResetRegVec_w1_i1 x1_member_allClocks_tileClockGroup_tile_0_reset_resetout (	// @[ClockSelector.scala:22:28]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_tileClockGroup_tile_0_reset_count_io_q < 8'hC7),	// @[ClockSelector.scala:21:25, :26:35]
    .io_en (_x1_member_allClocks_tileClockGroup_tile_0_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_tileClockGroup_tile_0_reset_resetout_io_q)
  );
  AsyncResetRegVec_w8_i0 x1_member_allClocks_tileClockGroup_tile_1_reset_count (	// @[ClockSelector.scala:21:25]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_tileClockGroup_tile_1_reset_count_io_q + 8'h1),	// @[ClockSelector.scala:21:25, :24:32]
    .io_en (_x1_member_allClocks_tileClockGroup_tile_1_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_tileClockGroup_tile_1_reset_count_io_q)
  );
  AsyncResetRegVec_w1_i1 x1_member_allClocks_tileClockGroup_tile_1_reset_resetout (	// @[ClockSelector.scala:22:28]
    .clock (auto_clock_in_0_clock),
    .reset (auto_clock_in_0_reset),
    .io_d  (_x1_member_allClocks_tileClockGroup_tile_1_reset_count_io_q < 8'hC7),	// @[ClockSelector.scala:21:25, :26:35]
    .io_en (_x1_member_allClocks_tileClockGroup_tile_1_reset_resetout_io_q),	// @[ClockSelector.scala:22:28]
    .io_q  (_x1_member_allClocks_tileClockGroup_tile_1_reset_resetout_io_q)
  );
  AsyncResetRegVec_w1_i1 debug_en (	// @[ClockSelector.scala:76:55]
    .clock (1'h0),
    .reset (auto_clock_in_0_reset),
    .io_d  (auto_tl_in_a_bits_data[32]),	// @[RegisterRouter.scala:82:24]
    .io_en (out_woready_1 & auto_tl_in_a_bits_mask[4]),	// @[Bitwise.scala:28:17, RegisterRouter.scala:82:24]
    .io_q  (_debug_en_io_q)
  );
  AsyncResetRegVec_w2_i0_2 debug_sel (	// @[ClockSelector.scala:77:55]
    .reset (auto_clock_in_0_reset),
    .io_d  (auto_tl_in_a_bits_data[1:0]),	// @[RegisterRouter.scala:82:24]
    .io_en (out_woready_3 & auto_tl_in_a_bits_mask[0]),	// @[Bitwise.scala:28:17, RegisterRouter.scala:82:24]
    .io_q  (_debug_sel_io_q)
  );
  ClockMutexMux debug_mux (	// @[ClockUtil.scala:126:25]
    .io_clocksIn_0 (auto_clock_in_0_clock),
    .io_clocksIn_1 (auto_clock_in_1_clock),
    .io_resetAsync (auto_clock_in_0_reset),
    .io_sel        (_debug_sel_io_q[0]),	// @[ClockSelector.scala:77:55, :80:33]
    .io_clockOut   (_debug_mux_io_clockOut)
  );
  AsyncResetRegVec_w12_i1 debug_div (	// @[ClockSelector.scala:79:55]
    .reset (auto_clock_in_0_reset),
    .io_d  (auto_tl_in_a_bits_data[43:32]),	// @[RegisterRouter.scala:82:24]
    .io_en (out_woready_3 & (&{{4{auto_tl_in_a_bits_mask[5]}}, {8{auto_tl_in_a_bits_mask[4]}}})),	// @[Bitwise.scala:28:17, :77:12, RegisterRouter.scala:82:24]
    .io_q  (_debug_div_io_q)
  );
  ClockDivideOrPass clk_temp_divider (	// @[ClockSelector.scala:85:33]
    .clock         (_debug_mux_io_clockOut),	// @[ClockUtil.scala:126:25]
    .reset         (auto_clock_in_0_reset),
    .io_divisor    (_debug_div_io_q),	// @[ClockSelector.scala:79:55]
    .io_resetAsync (auto_clock_in_0_reset),
    .io_clockOut   (_clk_temp_divider_io_clockOut)
  );
  EICG_wrapper io_clk_debug_cg (	// @[ClockGate.scala:36:20]
    .in      (_clk_temp_divider_io_clockOut),	// @[ClockSelector.scala:85:33]
    .test_en (1'h0),
    .en      (_debug_en_io_q),	// @[ClockSelector.scala:76:55]
    .out     (io_clk_debug)
  );
  assign auto_clock_out_member_allClocks_tileClockGroup_tile_1_clock = _mux_io_clockOut;	// @[ClockUtil.scala:126:25]
  assign auto_clock_out_member_allClocks_tileClockGroup_tile_1_reset = _x1_member_allClocks_tileClockGroup_tile_1_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  assign auto_clock_out_member_allClocks_tileClockGroup_tile_0_clock = _mux_io_clockOut;	// @[ClockUtil.scala:126:25]
  assign auto_clock_out_member_allClocks_tileClockGroup_tile_0_reset = _x1_member_allClocks_tileClockGroup_tile_0_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  assign auto_clock_out_member_allClocks_uncore_clock = _mux_io_clockOut;	// @[ClockUtil.scala:126:25]
  assign auto_clock_out_member_allClocks_uncore_reset = _x1_member_allClocks_uncore_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  assign auto_clock_out_member_allClocks_fbus_clock = _mux_io_clockOut;	// @[ClockUtil.scala:126:25]
  assign auto_clock_out_member_allClocks_fbus_reset = _x1_member_allClocks_fbus_reset_resetout_io_q;	// @[ClockSelector.scala:22:28]
  assign auto_tl_in_a_ready = auto_tl_in_d_ready;
  assign auto_tl_in_d_valid = auto_tl_in_a_valid;
  assign auto_tl_in_d_bits_opcode = bundleIn_0_d_bits_opcode;	// @[RegisterRouter.scala:97:19]
  assign auto_tl_in_d_bits_size = auto_tl_in_a_bits_size;
  assign auto_tl_in_d_bits_source = auto_tl_in_a_bits_source;
  assign auto_tl_in_d_bits_data = {20'h0, _out_out_bits_data_WIRE_1 ? (auto_tl_in_a_bits_address[3] ? {_debug_div_io_q, 30'h0, _debug_sel_io_q} : {11'h0, _debug_en_io_q, 30'h0, _sel_io_q}) : 44'h0};	// @[Cat.scala:33:92, ClockSelector.scala:60:49, :76:55, :77:55, :79:55, MuxLiteral.scala:49:{10,48}, RegisterRouter.scala:82:24]
endmodule

