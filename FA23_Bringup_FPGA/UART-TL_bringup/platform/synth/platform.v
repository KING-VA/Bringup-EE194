// platform.v

// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module platform (
		input  wire        clk_clk,                                   //                       clk.clk
		input  wire        emif_fm_0_local_reset_req_local_reset_req, // emif_fm_0_local_reset_req.local_reset_req
		input  wire        emif_fm_0_oct_oct_rzqin,                   //             emif_fm_0_oct.oct_rzqin
		output wire [0:0]  emif_fm_0_mem_mem_ck,                      //             emif_fm_0_mem.mem_ck
		output wire [0:0]  emif_fm_0_mem_mem_ck_n,                    //                          .mem_ck_n
		output wire [16:0] emif_fm_0_mem_mem_a,                       //                          .mem_a
		output wire [0:0]  emif_fm_0_mem_mem_act_n,                   //                          .mem_act_n
		output wire [1:0]  emif_fm_0_mem_mem_ba,                      //                          .mem_ba
		output wire [1:0]  emif_fm_0_mem_mem_bg,                      //                          .mem_bg
		output wire [0:0]  emif_fm_0_mem_mem_cke,                     //                          .mem_cke
		output wire [0:0]  emif_fm_0_mem_mem_cs_n,                    //                          .mem_cs_n
		output wire [0:0]  emif_fm_0_mem_mem_odt,                     //                          .mem_odt
		output wire [0:0]  emif_fm_0_mem_mem_reset_n,                 //                          .mem_reset_n
		output wire [0:0]  emif_fm_0_mem_mem_par,                     //                          .mem_par
		input  wire [0:0]  emif_fm_0_mem_mem_alert_n,                 //                          .mem_alert_n
		inout  wire [7:0]  emif_fm_0_mem_mem_dqs,                     //                          .mem_dqs
		inout  wire [7:0]  emif_fm_0_mem_mem_dqs_n,                   //                          .mem_dqs_n
		inout  wire [63:0] emif_fm_0_mem_mem_dq,                      //                          .mem_dq
		inout  wire [7:0]  emif_fm_0_mem_mem_dbi_n,                   //                          .mem_dbi_n
		input  wire        reset_reset,                               //                     reset.reset
		output wire        uart_writeresponsevalid_n,                 //                      uart.writeresponsevalid_n
		input  wire        uart_beginbursttransfer,                   //                          .beginbursttransfer
		output wire        serial_serial_in_ready,                    //                    serial.serial_in_ready
		output wire        serial_serial_out_valid,                   //                          .serial_out_valid
		output wire        serial_serial_out,                         //                          .serial_out
		output wire        serial_led,                                //                          .led
		input  wire        serial_serial_in_valid,                    //                          .serial_in_valid
		input  wire        serial_serial_in,                          //                          .serial_in
		input  wire        serial_serial_out_ready                    //                          .serial_out_ready
	);

	wire           emif_cal_0_emif_calbus_clk_clk;                       // emif_cal_0:calbus_clk -> emif_fm_0:calbus_clk
	wire           clock_in_out_clk_clk;                                 // clock_in:out_clk -> [emif_fm_0:pll_ref_clk, mm_interconnect_0:clock_in_out_clk_clk, reset_in:clk, rst_controller:clk, uart_to_serializedtl_0:clock]
	wire    [31:0] emif_cal_0_emif_calbus_0_calbus_wdata;                // emif_cal_0:calbus_wdata_0 -> emif_fm_0:calbus_wdata
	wire    [19:0] emif_cal_0_emif_calbus_0_calbus_address;              // emif_cal_0:calbus_address_0 -> emif_fm_0:calbus_address
	wire  [4095:0] emif_fm_0_emif_calbus_calbus_seq_param_tbl;           // emif_fm_0:calbus_seq_param_tbl -> emif_cal_0:calbus_seq_param_tbl_0
	wire           emif_cal_0_emif_calbus_0_calbus_read;                 // emif_cal_0:calbus_read_0 -> emif_fm_0:calbus_read
	wire           emif_cal_0_emif_calbus_0_calbus_write;                // emif_cal_0:calbus_write_0 -> emif_fm_0:calbus_write
	wire    [31:0] emif_fm_0_emif_calbus_calbus_rdata;                   // emif_fm_0:calbus_rdata -> emif_cal_0:calbus_rdata_0
	wire           reset_in_out_reset_reset;                             // reset_in:out_reset -> [rst_controller:reset_in0, uart_to_serializedtl_0:reset]
	wire     [1:0] uart_to_serializedtl_0_altera_axi4_master_awburst;    // uart_to_serializedtl_0:axi_ios_0_aw_bits_burst -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awburst
	wire     [7:0] uart_to_serializedtl_0_altera_axi4_master_arlen;      // uart_to_serializedtl_0:axi_ios_0_ar_bits_len -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arlen
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_arqos;      // uart_to_serializedtl_0:axi_ios_0_ar_bits_qos -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arqos
	wire           uart_to_serializedtl_0_altera_axi4_master_wready;     // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_wready -> uart_to_serializedtl_0:axi_ios_0_w_ready
	wire     [7:0] uart_to_serializedtl_0_altera_axi4_master_wstrb;      // uart_to_serializedtl_0:axi_ios_0_w_bits_strb -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_wstrb
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_rid;        // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_rid -> uart_to_serializedtl_0:axi_ios_0_r_bits_id
	wire           uart_to_serializedtl_0_altera_axi4_master_rready;     // uart_to_serializedtl_0:axi_ios_0_r_ready -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_rready
	wire     [7:0] uart_to_serializedtl_0_altera_axi4_master_awlen;      // uart_to_serializedtl_0:axi_ios_0_aw_bits_len -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awlen
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_awqos;      // uart_to_serializedtl_0:axi_ios_0_aw_bits_qos -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awqos
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_arcache;    // uart_to_serializedtl_0:axi_ios_0_ar_bits_cache -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arcache
	wire           uart_to_serializedtl_0_altera_axi4_master_wvalid;     // uart_to_serializedtl_0:axi_ios_0_w_valid -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_wvalid
	wire    [36:0] uart_to_serializedtl_0_altera_axi4_master_araddr;     // uart_to_serializedtl_0:axi_ios_0_ar_bits_addr -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_araddr
	wire     [2:0] uart_to_serializedtl_0_altera_axi4_master_arprot;     // uart_to_serializedtl_0:axi_ios_0_ar_bits_prot -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arprot
	wire     [2:0] uart_to_serializedtl_0_altera_axi4_master_awprot;     // uart_to_serializedtl_0:axi_ios_0_aw_bits_prot -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awprot
	wire    [63:0] uart_to_serializedtl_0_altera_axi4_master_wdata;      // uart_to_serializedtl_0:axi_ios_0_w_bits_data -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_wdata
	wire           uart_to_serializedtl_0_altera_axi4_master_arvalid;    // uart_to_serializedtl_0:axi_ios_0_ar_valid -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arvalid
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_awcache;    // uart_to_serializedtl_0:axi_ios_0_aw_bits_cache -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awcache
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_arid;       // uart_to_serializedtl_0:axi_ios_0_ar_bits_id -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arid
	wire           uart_to_serializedtl_0_altera_axi4_master_arlock;     // uart_to_serializedtl_0:axi_ios_0_ar_bits_lock -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arlock
	wire           uart_to_serializedtl_0_altera_axi4_master_awlock;     // uart_to_serializedtl_0:axi_ios_0_aw_bits_lock -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awlock
	wire    [36:0] uart_to_serializedtl_0_altera_axi4_master_awaddr;     // uart_to_serializedtl_0:axi_ios_0_aw_bits_addr -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awaddr
	wire     [1:0] uart_to_serializedtl_0_altera_axi4_master_bresp;      // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_bresp -> uart_to_serializedtl_0:axi_ios_0_b_bits_resp
	wire           uart_to_serializedtl_0_altera_axi4_master_arready;    // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arready -> uart_to_serializedtl_0:axi_ios_0_ar_ready
	wire    [63:0] uart_to_serializedtl_0_altera_axi4_master_rdata;      // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_rdata -> uart_to_serializedtl_0:axi_ios_0_r_bits_data
	wire           uart_to_serializedtl_0_altera_axi4_master_awready;    // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awready -> uart_to_serializedtl_0:axi_ios_0_aw_ready
	wire     [1:0] uart_to_serializedtl_0_altera_axi4_master_arburst;    // uart_to_serializedtl_0:axi_ios_0_ar_bits_burst -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arburst
	wire     [2:0] uart_to_serializedtl_0_altera_axi4_master_arsize;     // uart_to_serializedtl_0:axi_ios_0_ar_bits_size -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_arsize
	wire           uart_to_serializedtl_0_altera_axi4_master_rlast;      // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_rlast -> uart_to_serializedtl_0:axi_ios_0_r_bits_last
	wire           uart_to_serializedtl_0_altera_axi4_master_bready;     // uart_to_serializedtl_0:axi_ios_0_b_ready -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_bready
	wire           uart_to_serializedtl_0_altera_axi4_master_wlast;      // uart_to_serializedtl_0:axi_ios_0_w_bits_last -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_wlast
	wire     [1:0] uart_to_serializedtl_0_altera_axi4_master_rresp;      // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_rresp -> uart_to_serializedtl_0:axi_ios_0_r_bits_resp
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_bid;        // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_bid -> uart_to_serializedtl_0:axi_ios_0_b_bits_id
	wire     [3:0] uart_to_serializedtl_0_altera_axi4_master_awid;       // uart_to_serializedtl_0:axi_ios_0_aw_bits_id -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awid
	wire           uart_to_serializedtl_0_altera_axi4_master_bvalid;     // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_bvalid -> uart_to_serializedtl_0:axi_ios_0_b_valid
	wire           uart_to_serializedtl_0_altera_axi4_master_rvalid;     // mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_rvalid -> uart_to_serializedtl_0:axi_ios_0_r_valid
	wire           uart_to_serializedtl_0_altera_axi4_master_awvalid;    // uart_to_serializedtl_0:axi_ios_0_aw_valid -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awvalid
	wire     [2:0] uart_to_serializedtl_0_altera_axi4_master_awsize;     // uart_to_serializedtl_0:axi_ios_0_aw_bits_size -> mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_awsize
	wire   [511:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdata;      // emif_fm_0:amm_readdata_0 -> mm_interconnect_0:emif_fm_0_ctrl_amm_0_readdata
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_waitrequest;   // emif_fm_0:amm_ready_0 -> mm_interconnect_0:emif_fm_0_ctrl_amm_0_waitrequest
	wire    [27:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_address;       // mm_interconnect_0:emif_fm_0_ctrl_amm_0_address -> emif_fm_0:amm_address_0
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_read;          // mm_interconnect_0:emif_fm_0_ctrl_amm_0_read -> emif_fm_0:amm_read_0
	wire    [63:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_byteenable;    // mm_interconnect_0:emif_fm_0_ctrl_amm_0_byteenable -> emif_fm_0:amm_byteenable_0
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdatavalid; // emif_fm_0:amm_readdatavalid_0 -> mm_interconnect_0:emif_fm_0_ctrl_amm_0_readdatavalid
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_write;         // mm_interconnect_0:emif_fm_0_ctrl_amm_0_write -> emif_fm_0:amm_write_0
	wire   [511:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_writedata;     // mm_interconnect_0:emif_fm_0_ctrl_amm_0_writedata -> emif_fm_0:amm_writedata_0
	wire     [6:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_burstcount;    // mm_interconnect_0:emif_fm_0_ctrl_amm_0_burstcount -> emif_fm_0:amm_burstcount_0
	wire           emif_fm_0_emif_usr_clk_clk;                           // emif_fm_0:emif_usr_clk -> [mm_interconnect_0:emif_fm_0_emif_usr_clk_clk, rst_controller_001:clk]
	wire           rst_controller_reset_out_reset;                       // rst_controller:reset_out -> [mm_interconnect_0:uart_to_serializedtl_0_altera_axi4_master_translator_clk_reset_reset_bridge_in_reset_reset, mm_interconnect_0:uart_to_serializedtl_0_reset_reset_bridge_in_reset_reset]
	wire           rst_controller_001_reset_out_reset;                   // rst_controller_001:reset_out -> [mm_interconnect_0:emif_fm_0_ctrl_amm_0_agent_rsp_fifo_clk_reset_reset_bridge_in_reset_reset, mm_interconnect_0:emif_fm_0_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset]
	wire           emif_fm_0_emif_usr_reset_n_reset;                     // emif_fm_0:emif_usr_reset_n -> rst_controller_001:reset_in0

	platform_clock_in clock_in (
		.in_clk  (clk_clk),              //   input,  width = 1,  in_clk.clk
		.out_clk (clock_in_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	DDR4_Cal emif_cal_0 (
		.calbus_read_0          (emif_cal_0_emif_calbus_0_calbus_read),       //  output,     width = 1,   emif_calbus_0.calbus_read
		.calbus_write_0         (emif_cal_0_emif_calbus_0_calbus_write),      //  output,     width = 1,                .calbus_write
		.calbus_address_0       (emif_cal_0_emif_calbus_0_calbus_address),    //  output,    width = 20,                .calbus_address
		.calbus_wdata_0         (emif_cal_0_emif_calbus_0_calbus_wdata),      //  output,    width = 32,                .calbus_wdata
		.calbus_rdata_0         (emif_fm_0_emif_calbus_calbus_rdata),         //   input,    width = 32,                .calbus_rdata
		.calbus_seq_param_tbl_0 (emif_fm_0_emif_calbus_calbus_seq_param_tbl), //   input,  width = 4096,                .calbus_seq_param_tbl
		.calbus_clk             (emif_cal_0_emif_calbus_clk_clk)              //  output,     width = 1, emif_calbus_clk.clk
	);

	DDR4 emif_fm_0 (
		.local_reset_req      (emif_fm_0_local_reset_req_local_reset_req),            //   input,     width = 1,    local_reset_req.local_reset_req
		.local_reset_done     (),                                                     //  output,     width = 1, local_reset_status.local_reset_done
		.pll_ref_clk          (clock_in_out_clk_clk),                                 //   input,     width = 1,        pll_ref_clk.clk
		.oct_rzqin            (emif_fm_0_oct_oct_rzqin),                              //   input,     width = 1,                oct.oct_rzqin
		.mem_ck               (emif_fm_0_mem_mem_ck),                                 //  output,     width = 1,                mem.mem_ck
		.mem_ck_n             (emif_fm_0_mem_mem_ck_n),                               //  output,     width = 1,                   .mem_ck_n
		.mem_a                (emif_fm_0_mem_mem_a),                                  //  output,    width = 17,                   .mem_a
		.mem_act_n            (emif_fm_0_mem_mem_act_n),                              //  output,     width = 1,                   .mem_act_n
		.mem_ba               (emif_fm_0_mem_mem_ba),                                 //  output,     width = 2,                   .mem_ba
		.mem_bg               (emif_fm_0_mem_mem_bg),                                 //  output,     width = 2,                   .mem_bg
		.mem_cke              (emif_fm_0_mem_mem_cke),                                //  output,     width = 1,                   .mem_cke
		.mem_cs_n             (emif_fm_0_mem_mem_cs_n),                               //  output,     width = 1,                   .mem_cs_n
		.mem_odt              (emif_fm_0_mem_mem_odt),                                //  output,     width = 1,                   .mem_odt
		.mem_reset_n          (emif_fm_0_mem_mem_reset_n),                            //  output,     width = 1,                   .mem_reset_n
		.mem_par              (emif_fm_0_mem_mem_par),                                //  output,     width = 1,                   .mem_par
		.mem_alert_n          (emif_fm_0_mem_mem_alert_n),                            //   input,     width = 1,                   .mem_alert_n
		.mem_dqs              (emif_fm_0_mem_mem_dqs),                                //   inout,     width = 8,                   .mem_dqs
		.mem_dqs_n            (emif_fm_0_mem_mem_dqs_n),                              //   inout,     width = 8,                   .mem_dqs_n
		.mem_dq               (emif_fm_0_mem_mem_dq),                                 //   inout,    width = 64,                   .mem_dq
		.mem_dbi_n            (emif_fm_0_mem_mem_dbi_n),                              //   inout,     width = 8,                   .mem_dbi_n
		.local_cal_success    (),                                                     //  output,     width = 1,             status.local_cal_success
		.local_cal_fail       (),                                                     //  output,     width = 1,                   .local_cal_fail
		.emif_usr_reset_n     (emif_fm_0_emif_usr_reset_n_reset),                     //  output,     width = 1,   emif_usr_reset_n.reset_n
		.emif_usr_clk         (emif_fm_0_emif_usr_clk_clk),                           //  output,     width = 1,       emif_usr_clk.clk
		.amm_ready_0          (mm_interconnect_0_emif_fm_0_ctrl_amm_0_waitrequest),   //  output,     width = 1,         ctrl_amm_0.waitrequest_n
		.amm_read_0           (mm_interconnect_0_emif_fm_0_ctrl_amm_0_read),          //   input,     width = 1,                   .read
		.amm_write_0          (mm_interconnect_0_emif_fm_0_ctrl_amm_0_write),         //   input,     width = 1,                   .write
		.amm_address_0        (mm_interconnect_0_emif_fm_0_ctrl_amm_0_address),       //   input,    width = 28,                   .address
		.amm_readdata_0       (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdata),      //  output,   width = 512,                   .readdata
		.amm_writedata_0      (mm_interconnect_0_emif_fm_0_ctrl_amm_0_writedata),     //   input,   width = 512,                   .writedata
		.amm_burstcount_0     (mm_interconnect_0_emif_fm_0_ctrl_amm_0_burstcount),    //   input,     width = 7,                   .burstcount
		.amm_byteenable_0     (mm_interconnect_0_emif_fm_0_ctrl_amm_0_byteenable),    //   input,    width = 64,                   .byteenable
		.amm_readdatavalid_0  (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdatavalid), //  output,     width = 1,                   .readdatavalid
		.calbus_read          (emif_cal_0_emif_calbus_0_calbus_read),                 //   input,     width = 1,        emif_calbus.calbus_read
		.calbus_write         (emif_cal_0_emif_calbus_0_calbus_write),                //   input,     width = 1,                   .calbus_write
		.calbus_address       (emif_cal_0_emif_calbus_0_calbus_address),              //   input,    width = 20,                   .calbus_address
		.calbus_wdata         (emif_cal_0_emif_calbus_0_calbus_wdata),                //   input,    width = 32,                   .calbus_wdata
		.calbus_rdata         (emif_fm_0_emif_calbus_calbus_rdata),                   //  output,    width = 32,                   .calbus_rdata
		.calbus_seq_param_tbl (emif_fm_0_emif_calbus_calbus_seq_param_tbl),           //  output,  width = 4096,                   .calbus_seq_param_tbl
		.calbus_clk           (emif_cal_0_emif_calbus_clk_clk)                        //   input,     width = 1,    emif_calbus_clk.clk
	);

	platform_reset_in reset_in (
		.clk       (clock_in_out_clk_clk),     //   input,  width = 1,       clk.clk
		.in_reset  (reset_reset),              //   input,  width = 1,  in_reset.reset
		.out_reset (reset_in_out_reset_reset)  //  output,  width = 1, out_reset.reset
	);

	platform_uart_to_serializedtl_0 uart_to_serializedtl_0 (
		.clock                   (clock_in_out_clk_clk),                              //   input,   width = 1,        clock_reset.clk
		.reset                   (reset_in_out_reset_reset),                          //   input,   width = 1,              reset.reset
		.axi_ios_0_aw_ready      (uart_to_serializedtl_0_altera_axi4_master_awready), //   input,   width = 1, altera_axi4_master.awready
		.axi_ios_0_w_ready       (uart_to_serializedtl_0_altera_axi4_master_wready),  //   input,   width = 1,                   .wready
		.axi_ios_0_b_valid       (uart_to_serializedtl_0_altera_axi4_master_bvalid),  //   input,   width = 1,                   .bvalid
		.axi_ios_0_b_bits_id     (uart_to_serializedtl_0_altera_axi4_master_bid),     //   input,   width = 4,                   .bid
		.axi_ios_0_b_bits_resp   (uart_to_serializedtl_0_altera_axi4_master_bresp),   //   input,   width = 2,                   .bresp
		.axi_ios_0_ar_ready      (uart_to_serializedtl_0_altera_axi4_master_arready), //   input,   width = 1,                   .arready
		.axi_ios_0_r_valid       (uart_to_serializedtl_0_altera_axi4_master_rvalid),  //   input,   width = 1,                   .rvalid
		.axi_ios_0_r_bits_id     (uart_to_serializedtl_0_altera_axi4_master_rid),     //   input,   width = 4,                   .rid
		.axi_ios_0_r_bits_data   (uart_to_serializedtl_0_altera_axi4_master_rdata),   //   input,  width = 64,                   .rdata
		.axi_ios_0_r_bits_resp   (uart_to_serializedtl_0_altera_axi4_master_rresp),   //   input,   width = 2,                   .rresp
		.axi_ios_0_r_bits_last   (uart_to_serializedtl_0_altera_axi4_master_rlast),   //   input,   width = 1,                   .rlast
		.axi_ios_0_aw_valid      (uart_to_serializedtl_0_altera_axi4_master_awvalid), //  output,   width = 1,                   .awvalid
		.axi_ios_0_aw_bits_id    (uart_to_serializedtl_0_altera_axi4_master_awid),    //  output,   width = 4,                   .awid
		.axi_ios_0_aw_bits_addr  (uart_to_serializedtl_0_altera_axi4_master_awaddr),  //  output,  width = 37,                   .awaddr
		.axi_ios_0_aw_bits_len   (uart_to_serializedtl_0_altera_axi4_master_awlen),   //  output,   width = 8,                   .awlen
		.axi_ios_0_aw_bits_size  (uart_to_serializedtl_0_altera_axi4_master_awsize),  //  output,   width = 3,                   .awsize
		.axi_ios_0_aw_bits_burst (uart_to_serializedtl_0_altera_axi4_master_awburst), //  output,   width = 2,                   .awburst
		.axi_ios_0_aw_bits_lock  (uart_to_serializedtl_0_altera_axi4_master_awlock),  //  output,   width = 1,                   .awlock
		.axi_ios_0_aw_bits_cache (uart_to_serializedtl_0_altera_axi4_master_awcache), //  output,   width = 4,                   .awcache
		.axi_ios_0_aw_bits_prot  (uart_to_serializedtl_0_altera_axi4_master_awprot),  //  output,   width = 3,                   .awprot
		.axi_ios_0_aw_bits_qos   (uart_to_serializedtl_0_altera_axi4_master_awqos),   //  output,   width = 4,                   .awqos
		.axi_ios_0_w_valid       (uart_to_serializedtl_0_altera_axi4_master_wvalid),  //  output,   width = 1,                   .wvalid
		.axi_ios_0_w_bits_data   (uart_to_serializedtl_0_altera_axi4_master_wdata),   //  output,  width = 64,                   .wdata
		.axi_ios_0_w_bits_strb   (uart_to_serializedtl_0_altera_axi4_master_wstrb),   //  output,   width = 8,                   .wstrb
		.axi_ios_0_w_bits_last   (uart_to_serializedtl_0_altera_axi4_master_wlast),   //  output,   width = 1,                   .wlast
		.axi_ios_0_b_ready       (uart_to_serializedtl_0_altera_axi4_master_bready),  //  output,   width = 1,                   .bready
		.axi_ios_0_ar_valid      (uart_to_serializedtl_0_altera_axi4_master_arvalid), //  output,   width = 1,                   .arvalid
		.axi_ios_0_ar_bits_id    (uart_to_serializedtl_0_altera_axi4_master_arid),    //  output,   width = 4,                   .arid
		.axi_ios_0_ar_bits_addr  (uart_to_serializedtl_0_altera_axi4_master_araddr),  //  output,  width = 37,                   .araddr
		.axi_ios_0_ar_bits_len   (uart_to_serializedtl_0_altera_axi4_master_arlen),   //  output,   width = 8,                   .arlen
		.axi_ios_0_ar_bits_size  (uart_to_serializedtl_0_altera_axi4_master_arsize),  //  output,   width = 3,                   .arsize
		.axi_ios_0_ar_bits_burst (uart_to_serializedtl_0_altera_axi4_master_arburst), //  output,   width = 2,                   .arburst
		.axi_ios_0_ar_bits_lock  (uart_to_serializedtl_0_altera_axi4_master_arlock),  //  output,   width = 1,                   .arlock
		.axi_ios_0_ar_bits_cache (uart_to_serializedtl_0_altera_axi4_master_arcache), //  output,   width = 4,                   .arcache
		.axi_ios_0_ar_bits_prot  (uart_to_serializedtl_0_altera_axi4_master_arprot),  //  output,   width = 3,                   .arprot
		.axi_ios_0_ar_bits_qos   (uart_to_serializedtl_0_altera_axi4_master_arqos),   //  output,   width = 4,                   .arqos
		.axi_ios_0_r_ready       (uart_to_serializedtl_0_altera_axi4_master_rready),  //  output,   width = 1,                   .rready
		.io_uart_txd             (uart_writeresponsevalid_n),                         //  output,   width = 1,               uart.writeresponsevalid_n
		.io_uart_rxd             (uart_beginbursttransfer),                           //   input,   width = 1,                   .beginbursttransfer
		.io_serial_in_ready      (serial_serial_in_ready),                            //  output,   width = 1,             serial.serial_in_ready
		.io_serial_out_valid     (serial_serial_out_valid),                           //  output,   width = 1,                   .serial_out_valid
		.io_serial_out_bits      (serial_serial_out),                                 //  output,   width = 1,                   .serial_out
		.io_dropped              (serial_led),                                        //  output,   width = 1,                   .led
		.io_serial_in_valid      (serial_serial_in_valid),                            //   input,   width = 1,                   .serial_in_valid
		.io_serial_in_bits       (serial_serial_in),                                  //   input,   width = 1,                   .serial_in
		.io_serial_out_ready     (serial_serial_out_ready)                            //   input,   width = 1,                   .serial_out_ready
	);

	platform_altera_mm_interconnect_1920_7w4kisa mm_interconnect_0 (
		.uart_to_serializedtl_0_altera_axi4_master_awid                                             (uart_to_serializedtl_0_altera_axi4_master_awid),       //   input,    width = 4,                                            uart_to_serializedtl_0_altera_axi4_master.awid
		.uart_to_serializedtl_0_altera_axi4_master_awaddr                                           (uart_to_serializedtl_0_altera_axi4_master_awaddr),     //   input,   width = 37,                                                                                     .awaddr
		.uart_to_serializedtl_0_altera_axi4_master_awlen                                            (uart_to_serializedtl_0_altera_axi4_master_awlen),      //   input,    width = 8,                                                                                     .awlen
		.uart_to_serializedtl_0_altera_axi4_master_awsize                                           (uart_to_serializedtl_0_altera_axi4_master_awsize),     //   input,    width = 3,                                                                                     .awsize
		.uart_to_serializedtl_0_altera_axi4_master_awburst                                          (uart_to_serializedtl_0_altera_axi4_master_awburst),    //   input,    width = 2,                                                                                     .awburst
		.uart_to_serializedtl_0_altera_axi4_master_awlock                                           (uart_to_serializedtl_0_altera_axi4_master_awlock),     //   input,    width = 1,                                                                                     .awlock
		.uart_to_serializedtl_0_altera_axi4_master_awcache                                          (uart_to_serializedtl_0_altera_axi4_master_awcache),    //   input,    width = 4,                                                                                     .awcache
		.uart_to_serializedtl_0_altera_axi4_master_awprot                                           (uart_to_serializedtl_0_altera_axi4_master_awprot),     //   input,    width = 3,                                                                                     .awprot
		.uart_to_serializedtl_0_altera_axi4_master_awqos                                            (uart_to_serializedtl_0_altera_axi4_master_awqos),      //   input,    width = 4,                                                                                     .awqos
		.uart_to_serializedtl_0_altera_axi4_master_awvalid                                          (uart_to_serializedtl_0_altera_axi4_master_awvalid),    //   input,    width = 1,                                                                                     .awvalid
		.uart_to_serializedtl_0_altera_axi4_master_awready                                          (uart_to_serializedtl_0_altera_axi4_master_awready),    //  output,    width = 1,                                                                                     .awready
		.uart_to_serializedtl_0_altera_axi4_master_wdata                                            (uart_to_serializedtl_0_altera_axi4_master_wdata),      //   input,   width = 64,                                                                                     .wdata
		.uart_to_serializedtl_0_altera_axi4_master_wstrb                                            (uart_to_serializedtl_0_altera_axi4_master_wstrb),      //   input,    width = 8,                                                                                     .wstrb
		.uart_to_serializedtl_0_altera_axi4_master_wlast                                            (uart_to_serializedtl_0_altera_axi4_master_wlast),      //   input,    width = 1,                                                                                     .wlast
		.uart_to_serializedtl_0_altera_axi4_master_wvalid                                           (uart_to_serializedtl_0_altera_axi4_master_wvalid),     //   input,    width = 1,                                                                                     .wvalid
		.uart_to_serializedtl_0_altera_axi4_master_wready                                           (uart_to_serializedtl_0_altera_axi4_master_wready),     //  output,    width = 1,                                                                                     .wready
		.uart_to_serializedtl_0_altera_axi4_master_bid                                              (uart_to_serializedtl_0_altera_axi4_master_bid),        //  output,    width = 4,                                                                                     .bid
		.uart_to_serializedtl_0_altera_axi4_master_bresp                                            (uart_to_serializedtl_0_altera_axi4_master_bresp),      //  output,    width = 2,                                                                                     .bresp
		.uart_to_serializedtl_0_altera_axi4_master_bvalid                                           (uart_to_serializedtl_0_altera_axi4_master_bvalid),     //  output,    width = 1,                                                                                     .bvalid
		.uart_to_serializedtl_0_altera_axi4_master_bready                                           (uart_to_serializedtl_0_altera_axi4_master_bready),     //   input,    width = 1,                                                                                     .bready
		.uart_to_serializedtl_0_altera_axi4_master_arid                                             (uart_to_serializedtl_0_altera_axi4_master_arid),       //   input,    width = 4,                                                                                     .arid
		.uart_to_serializedtl_0_altera_axi4_master_araddr                                           (uart_to_serializedtl_0_altera_axi4_master_araddr),     //   input,   width = 37,                                                                                     .araddr
		.uart_to_serializedtl_0_altera_axi4_master_arlen                                            (uart_to_serializedtl_0_altera_axi4_master_arlen),      //   input,    width = 8,                                                                                     .arlen
		.uart_to_serializedtl_0_altera_axi4_master_arsize                                           (uart_to_serializedtl_0_altera_axi4_master_arsize),     //   input,    width = 3,                                                                                     .arsize
		.uart_to_serializedtl_0_altera_axi4_master_arburst                                          (uart_to_serializedtl_0_altera_axi4_master_arburst),    //   input,    width = 2,                                                                                     .arburst
		.uart_to_serializedtl_0_altera_axi4_master_arlock                                           (uart_to_serializedtl_0_altera_axi4_master_arlock),     //   input,    width = 1,                                                                                     .arlock
		.uart_to_serializedtl_0_altera_axi4_master_arcache                                          (uart_to_serializedtl_0_altera_axi4_master_arcache),    //   input,    width = 4,                                                                                     .arcache
		.uart_to_serializedtl_0_altera_axi4_master_arprot                                           (uart_to_serializedtl_0_altera_axi4_master_arprot),     //   input,    width = 3,                                                                                     .arprot
		.uart_to_serializedtl_0_altera_axi4_master_arqos                                            (uart_to_serializedtl_0_altera_axi4_master_arqos),      //   input,    width = 4,                                                                                     .arqos
		.uart_to_serializedtl_0_altera_axi4_master_arvalid                                          (uart_to_serializedtl_0_altera_axi4_master_arvalid),    //   input,    width = 1,                                                                                     .arvalid
		.uart_to_serializedtl_0_altera_axi4_master_arready                                          (uart_to_serializedtl_0_altera_axi4_master_arready),    //  output,    width = 1,                                                                                     .arready
		.uart_to_serializedtl_0_altera_axi4_master_rid                                              (uart_to_serializedtl_0_altera_axi4_master_rid),        //  output,    width = 4,                                                                                     .rid
		.uart_to_serializedtl_0_altera_axi4_master_rdata                                            (uart_to_serializedtl_0_altera_axi4_master_rdata),      //  output,   width = 64,                                                                                     .rdata
		.uart_to_serializedtl_0_altera_axi4_master_rresp                                            (uart_to_serializedtl_0_altera_axi4_master_rresp),      //  output,    width = 2,                                                                                     .rresp
		.uart_to_serializedtl_0_altera_axi4_master_rlast                                            (uart_to_serializedtl_0_altera_axi4_master_rlast),      //  output,    width = 1,                                                                                     .rlast
		.uart_to_serializedtl_0_altera_axi4_master_rvalid                                           (uart_to_serializedtl_0_altera_axi4_master_rvalid),     //  output,    width = 1,                                                                                     .rvalid
		.uart_to_serializedtl_0_altera_axi4_master_rready                                           (uart_to_serializedtl_0_altera_axi4_master_rready),     //   input,    width = 1,                                                                                     .rready
		.emif_fm_0_ctrl_amm_0_address                                                               (mm_interconnect_0_emif_fm_0_ctrl_amm_0_address),       //  output,   width = 28,                                                                 emif_fm_0_ctrl_amm_0.address
		.emif_fm_0_ctrl_amm_0_write                                                                 (mm_interconnect_0_emif_fm_0_ctrl_amm_0_write),         //  output,    width = 1,                                                                                     .write
		.emif_fm_0_ctrl_amm_0_read                                                                  (mm_interconnect_0_emif_fm_0_ctrl_amm_0_read),          //  output,    width = 1,                                                                                     .read
		.emif_fm_0_ctrl_amm_0_readdata                                                              (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdata),      //   input,  width = 512,                                                                                     .readdata
		.emif_fm_0_ctrl_amm_0_writedata                                                             (mm_interconnect_0_emif_fm_0_ctrl_amm_0_writedata),     //  output,  width = 512,                                                                                     .writedata
		.emif_fm_0_ctrl_amm_0_burstcount                                                            (mm_interconnect_0_emif_fm_0_ctrl_amm_0_burstcount),    //  output,    width = 7,                                                                                     .burstcount
		.emif_fm_0_ctrl_amm_0_byteenable                                                            (mm_interconnect_0_emif_fm_0_ctrl_amm_0_byteenable),    //  output,   width = 64,                                                                                     .byteenable
		.emif_fm_0_ctrl_amm_0_readdatavalid                                                         (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdatavalid), //   input,    width = 1,                                                                                     .readdatavalid
		.emif_fm_0_ctrl_amm_0_waitrequest                                                           (~mm_interconnect_0_emif_fm_0_ctrl_amm_0_waitrequest),  //   input,    width = 1,                                                                                     .waitrequest
		.uart_to_serializedtl_0_reset_reset_bridge_in_reset_reset                                   (rst_controller_reset_out_reset),                       //   input,    width = 1,                                   uart_to_serializedtl_0_reset_reset_bridge_in_reset.reset
		.uart_to_serializedtl_0_altera_axi4_master_translator_clk_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                       //   input,    width = 1, uart_to_serializedtl_0_altera_axi4_master_translator_clk_reset_reset_bridge_in_reset.reset
		.emif_fm_0_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset                          (rst_controller_001_reset_out_reset),                   //   input,    width = 1,                          emif_fm_0_ctrl_amm_0_translator_reset_reset_bridge_in_reset.reset
		.emif_fm_0_ctrl_amm_0_agent_rsp_fifo_clk_reset_reset_bridge_in_reset_reset                  (rst_controller_001_reset_out_reset),                   //   input,    width = 1,                  emif_fm_0_ctrl_amm_0_agent_rsp_fifo_clk_reset_reset_bridge_in_reset.reset
		.clock_in_out_clk_clk                                                                       (clock_in_out_clk_clk),                                 //   input,    width = 1,                                                                     clock_in_out_clk.clk
		.emif_fm_0_emif_usr_clk_clk                                                                 (emif_fm_0_emif_usr_clk_clk)                            //   input,    width = 1,                                                               emif_fm_0_emif_usr_clk.clk
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("both"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (reset_in_out_reset_reset),       //   input,  width = 1, reset_in0.reset
		.clk            (clock_in_out_clk_clk),           //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_reset_out_reset), //  output,  width = 1, reset_out.reset
		.reset_req      (),                               // (terminated),                       
		.reset_req_in0  (1'b0),                           // (terminated),                       
		.reset_in1      (1'b0),                           // (terminated),                       
		.reset_req_in1  (1'b0),                           // (terminated),                       
		.reset_in2      (1'b0),                           // (terminated),                       
		.reset_req_in2  (1'b0),                           // (terminated),                       
		.reset_in3      (1'b0),                           // (terminated),                       
		.reset_req_in3  (1'b0),                           // (terminated),                       
		.reset_in4      (1'b0),                           // (terminated),                       
		.reset_req_in4  (1'b0),                           // (terminated),                       
		.reset_in5      (1'b0),                           // (terminated),                       
		.reset_req_in5  (1'b0),                           // (terminated),                       
		.reset_in6      (1'b0),                           // (terminated),                       
		.reset_req_in6  (1'b0),                           // (terminated),                       
		.reset_in7      (1'b0),                           // (terminated),                       
		.reset_req_in7  (1'b0),                           // (terminated),                       
		.reset_in8      (1'b0),                           // (terminated),                       
		.reset_req_in8  (1'b0),                           // (terminated),                       
		.reset_in9      (1'b0),                           // (terminated),                       
		.reset_req_in9  (1'b0),                           // (terminated),                       
		.reset_in10     (1'b0),                           // (terminated),                       
		.reset_req_in10 (1'b0),                           // (terminated),                       
		.reset_in11     (1'b0),                           // (terminated),                       
		.reset_req_in11 (1'b0),                           // (terminated),                       
		.reset_in12     (1'b0),                           // (terminated),                       
		.reset_req_in12 (1'b0),                           // (terminated),                       
		.reset_in13     (1'b0),                           // (terminated),                       
		.reset_req_in13 (1'b0),                           // (terminated),                       
		.reset_in14     (1'b0),                           // (terminated),                       
		.reset_req_in14 (1'b0),                           // (terminated),                       
		.reset_in15     (1'b0),                           // (terminated),                       
		.reset_req_in15 (1'b0)                            // (terminated),                       
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("both"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~emif_fm_0_emif_usr_reset_n_reset),  //   input,  width = 1, reset_in0.reset
		.clk            (emif_fm_0_emif_usr_clk_clk),         //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), //  output,  width = 1, reset_out.reset
		.reset_req      (),                                   // (terminated),                       
		.reset_req_in0  (1'b0),                               // (terminated),                       
		.reset_in1      (1'b0),                               // (terminated),                       
		.reset_req_in1  (1'b0),                               // (terminated),                       
		.reset_in2      (1'b0),                               // (terminated),                       
		.reset_req_in2  (1'b0),                               // (terminated),                       
		.reset_in3      (1'b0),                               // (terminated),                       
		.reset_req_in3  (1'b0),                               // (terminated),                       
		.reset_in4      (1'b0),                               // (terminated),                       
		.reset_req_in4  (1'b0),                               // (terminated),                       
		.reset_in5      (1'b0),                               // (terminated),                       
		.reset_req_in5  (1'b0),                               // (terminated),                       
		.reset_in6      (1'b0),                               // (terminated),                       
		.reset_req_in6  (1'b0),                               // (terminated),                       
		.reset_in7      (1'b0),                               // (terminated),                       
		.reset_req_in7  (1'b0),                               // (terminated),                       
		.reset_in8      (1'b0),                               // (terminated),                       
		.reset_req_in8  (1'b0),                               // (terminated),                       
		.reset_in9      (1'b0),                               // (terminated),                       
		.reset_req_in9  (1'b0),                               // (terminated),                       
		.reset_in10     (1'b0),                               // (terminated),                       
		.reset_req_in10 (1'b0),                               // (terminated),                       
		.reset_in11     (1'b0),                               // (terminated),                       
		.reset_req_in11 (1'b0),                               // (terminated),                       
		.reset_in12     (1'b0),                               // (terminated),                       
		.reset_req_in12 (1'b0),                               // (terminated),                       
		.reset_in13     (1'b0),                               // (terminated),                       
		.reset_req_in13 (1'b0),                               // (terminated),                       
		.reset_in14     (1'b0),                               // (terminated),                       
		.reset_req_in14 (1'b0),                               // (terminated),                       
		.reset_in15     (1'b0),                               // (terminated),                       
		.reset_req_in15 (1'b0)                                // (terminated),                       
	);

endmodule
