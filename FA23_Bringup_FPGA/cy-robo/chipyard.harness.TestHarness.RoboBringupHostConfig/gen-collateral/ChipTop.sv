// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module ChipTop(
  input         port_clock,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                port_bits_in_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                port_bits_in_bits,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                port_bits_out_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                reset_io,	// @[generators/chipyard/src/main/scala/clocking/ClockBinders.scala:109:24]
                clock_uncore_clock,	// @[generators/chipyard/src/main/scala/clocking/ClockBinders.scala:117:26]
                axi4_mem_0_bits_aw_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_bits_w_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_bits_b_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input  [3:0]  axi4_mem_0_bits_b_bits_id,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input  [1:0]  axi4_mem_0_bits_b_bits_resp,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input         axi4_mem_0_bits_ar_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_bits_r_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input  [3:0]  axi4_mem_0_bits_r_bits_id,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input  [63:0] axi4_mem_0_bits_r_bits_data,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input  [1:0]  axi4_mem_0_bits_r_bits_resp,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  input         axi4_mem_0_bits_r_bits_last,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                uart_tsi_uart_rxd,	// @[generators/chipyard/src/main/scala/IOBinders.scala:427:22]
  output        port_bits_in_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                port_bits_out_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                port_bits_out_bits,	// @[generators/chipyard/src/main/scala/IOBinders.scala:310:18]
                axi4_mem_0_clock,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_reset,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_bits_aw_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [3:0]  axi4_mem_0_bits_aw_bits_id,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [32:0] axi4_mem_0_bits_aw_bits_addr,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [7:0]  axi4_mem_0_bits_aw_bits_len,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [2:0]  axi4_mem_0_bits_aw_bits_size,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [1:0]  axi4_mem_0_bits_aw_bits_burst,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output        axi4_mem_0_bits_aw_bits_lock,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [3:0]  axi4_mem_0_bits_aw_bits_cache,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [2:0]  axi4_mem_0_bits_aw_bits_prot,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [3:0]  axi4_mem_0_bits_aw_bits_qos,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output        axi4_mem_0_bits_w_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [63:0] axi4_mem_0_bits_w_bits_data,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [7:0]  axi4_mem_0_bits_w_bits_strb,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output        axi4_mem_0_bits_w_bits_last,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_bits_b_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                axi4_mem_0_bits_ar_valid,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [3:0]  axi4_mem_0_bits_ar_bits_id,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [32:0] axi4_mem_0_bits_ar_bits_addr,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [7:0]  axi4_mem_0_bits_ar_bits_len,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [2:0]  axi4_mem_0_bits_ar_bits_size,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [1:0]  axi4_mem_0_bits_ar_bits_burst,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output        axi4_mem_0_bits_ar_bits_lock,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [3:0]  axi4_mem_0_bits_ar_bits_cache,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [2:0]  axi4_mem_0_bits_ar_bits_prot,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output [3:0]  axi4_mem_0_bits_ar_bits_qos,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
  output        axi4_mem_0_bits_r_ready,	// @[generators/chipyard/src/main/scala/IOBinders.scala:325:19]
                uart_tsi_uart_txd,	// @[generators/chipyard/src/main/scala/IOBinders.scala:427:22]
                uart_tsi_dropped,	// @[generators/chipyard/src/main/scala/IOBinders.scala:427:22]
  output [3:0]  uart_tsi_tsi2tl_state	// @[generators/chipyard/src/main/scala/IOBinders.scala:427:22]
);

  DigitalTop system (	// @[generators/chipyard/src/main/scala/ChipTop.scala:28:35]
    .auto_prci_ctrl_domain_resetSynchronizer_in_member_allClocks_uncore_clock (clock_uncore_clock),
    .auto_prci_ctrl_domain_resetSynchronizer_in_member_allClocks_uncore_reset (reset_io),
    .mem_axi4_0_aw_ready                                                      (axi4_mem_0_bits_aw_ready),
    .mem_axi4_0_w_ready                                                       (axi4_mem_0_bits_w_ready),
    .mem_axi4_0_b_valid                                                       (axi4_mem_0_bits_b_valid),
    .mem_axi4_0_b_bits_id                                                     (axi4_mem_0_bits_b_bits_id),
    .mem_axi4_0_b_bits_resp                                                   (axi4_mem_0_bits_b_bits_resp),
    .mem_axi4_0_ar_ready                                                      (axi4_mem_0_bits_ar_ready),
    .mem_axi4_0_r_valid                                                       (axi4_mem_0_bits_r_valid),
    .mem_axi4_0_r_bits_id                                                     (axi4_mem_0_bits_r_bits_id),
    .mem_axi4_0_r_bits_data                                                   (axi4_mem_0_bits_r_bits_data),
    .mem_axi4_0_r_bits_resp                                                   (axi4_mem_0_bits_r_bits_resp),
    .mem_axi4_0_r_bits_last                                                   (axi4_mem_0_bits_r_bits_last),
    .uart_tsi_io_uart_rxd                                                     (uart_tsi_uart_rxd),
    .serial_tl_clock                                                          (port_clock),
    .serial_tl_bits_in_valid                                                  (port_bits_in_valid),
    .serial_tl_bits_in_bits                                                   (port_bits_in_bits),
    .serial_tl_bits_out_ready                                                 (port_bits_out_ready),
    .auto_subsystem_mbus_fixedClockNode_out_clock                             (axi4_mem_0_clock),
    .auto_subsystem_mbus_fixedClockNode_out_reset                             (axi4_mem_0_reset),
    .mem_axi4_0_aw_valid                                                      (axi4_mem_0_bits_aw_valid),
    .mem_axi4_0_aw_bits_id                                                    (axi4_mem_0_bits_aw_bits_id),
    .mem_axi4_0_aw_bits_addr                                                  (axi4_mem_0_bits_aw_bits_addr),
    .mem_axi4_0_aw_bits_len                                                   (axi4_mem_0_bits_aw_bits_len),
    .mem_axi4_0_aw_bits_size                                                  (axi4_mem_0_bits_aw_bits_size),
    .mem_axi4_0_aw_bits_burst                                                 (axi4_mem_0_bits_aw_bits_burst),
    .mem_axi4_0_aw_bits_lock                                                  (axi4_mem_0_bits_aw_bits_lock),
    .mem_axi4_0_aw_bits_cache                                                 (axi4_mem_0_bits_aw_bits_cache),
    .mem_axi4_0_aw_bits_prot                                                  (axi4_mem_0_bits_aw_bits_prot),
    .mem_axi4_0_aw_bits_qos                                                   (axi4_mem_0_bits_aw_bits_qos),
    .mem_axi4_0_w_valid                                                       (axi4_mem_0_bits_w_valid),
    .mem_axi4_0_w_bits_data                                                   (axi4_mem_0_bits_w_bits_data),
    .mem_axi4_0_w_bits_strb                                                   (axi4_mem_0_bits_w_bits_strb),
    .mem_axi4_0_w_bits_last                                                   (axi4_mem_0_bits_w_bits_last),
    .mem_axi4_0_b_ready                                                       (axi4_mem_0_bits_b_ready),
    .mem_axi4_0_ar_valid                                                      (axi4_mem_0_bits_ar_valid),
    .mem_axi4_0_ar_bits_id                                                    (axi4_mem_0_bits_ar_bits_id),
    .mem_axi4_0_ar_bits_addr                                                  (axi4_mem_0_bits_ar_bits_addr),
    .mem_axi4_0_ar_bits_len                                                   (axi4_mem_0_bits_ar_bits_len),
    .mem_axi4_0_ar_bits_size                                                  (axi4_mem_0_bits_ar_bits_size),
    .mem_axi4_0_ar_bits_burst                                                 (axi4_mem_0_bits_ar_bits_burst),
    .mem_axi4_0_ar_bits_lock                                                  (axi4_mem_0_bits_ar_bits_lock),
    .mem_axi4_0_ar_bits_cache                                                 (axi4_mem_0_bits_ar_bits_cache),
    .mem_axi4_0_ar_bits_prot                                                  (axi4_mem_0_bits_ar_bits_prot),
    .mem_axi4_0_ar_bits_qos                                                   (axi4_mem_0_bits_ar_bits_qos),
    .mem_axi4_0_r_ready                                                       (axi4_mem_0_bits_r_ready),
    .uart_tsi_io_uart_txd                                                     (uart_tsi_uart_txd),
    .uart_tsi_io_dropped                                                      (uart_tsi_dropped),
    .uart_tsi_io_tsi2tl_state                                                 (uart_tsi_tsi2tl_state),
    .serial_tl_bits_in_ready                                                  (port_bits_in_ready),
    .serial_tl_bits_out_valid                                                 (port_bits_out_valid),
    .serial_tl_bits_out_bits                                                  (port_bits_out_bits)
  );
endmodule

